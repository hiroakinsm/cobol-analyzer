項番,旧項番,種別,単位,グループ,サブグループ,タスク,方法,抽出,対象（ソースコード、AST）,単位,備考,比較対象,表示形式
1,1.1.1.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,プログラム名・目的,"IDENTIFICATION DIVISIONのPROGRAM-IDからプログラム名を抽出する, AUTHOR、INSTALLATION、DATE-WRITTEN、REMARKSなどのセクションやコメントからプログラムの目的を抽出する","プログラム名（文字列）, プログラムの目的（文字列）",AST,文字列,コメント内に記載されているプログラムの概要や機能説明も解析する,,テキスト
2,1.1.1.2,ダッシュボード,単一,コード品質・保守性・最適化・規約順守関連,,更新履歴,ソースコード内のコメントブロックから更新履歴情報をパースする,"更新日付（日時）, 更新者（文字列）, 変更内容（文字列）",AST,文字列,更新履歴の記載フォーマット（例：日付、更新者、変更内容）に従って情報を抽出する,更新履歴の記載フォーマットがある場合、比較可能,表形式
3,1.1.1.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,行数統計,"ソースコード全体の行数をカウントする, コード行数、コメント行数、空行数をそれぞれカウントする, コメント率を計算する","総行数, コード行数, コメント行数, 空行数, コメント率",コードファイル,"行, %",コメントとコードが同一行にある場合の処理方法を明確にする,コメント率の目標値があれば比較可能,グラフ（パイチャート）、表形式
4,1.1.1.4,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,DIVISION毎の構成比,"各DIVISION（IDENTIFICATION、ENVIRONMENT、DATA、PROCEDURE）の行数をカウントする, 各DIVISIONの全体に対する比率を計算する","各DIVISIONの行数, 各DIVISIONの比率",コードファイル,"行, %",必要に応じて、各SECTIONの行数もカウントする,,グラフ（パイチャート、棒グラフ）、表形式
5,1.1.2.1,ダッシュボード,単一,COBOL言語構造特有の解析項目,,COPY文の使用状況,"COPY文を全て抽出し、その使用箇所とコピー元のファイル名を取得する, 各COPYブックの使用回数を集計する","COPY文の使用回数, COPYブック名の一覧, 各COPYブックの使用回数",AST,"回, 文字列",,COPYブック管理の標準があれば比較可能,表形式
6,1.1.2.2,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,共通モジュールの使用状況,"CALL文や他のモジュール呼び出し構文を解析し、共通モジュールの使用状況を特定する, 呼び出しの種類（静的、動的）や呼び出し箇所（行番号）も解析する","呼び出し先モジュール名, 呼び出し回数, 呼び出しの種類, 呼び出し箇所の一覧",AST,"文字列, 回, 行番号",,モジュール使用のガイドラインがあれば比較可能,表形式
7,1.2.1.1.1,ダッシュボード,単一,COBOL言語構造特有の解析項目,,GOTO文の使用状況,"GOTO文を全て検索し、その使用箇所と頻度を解析する, GOTO文のジャンプ先（ラベル名）を特定する","GOTO文の使用回数, 使用箇所, ジャンプ先",AST,"回, 行番号, 文字列",,コーディング規約でGOTO文の使用が禁止または制限されている場合、比較が必要,テキスト記述、表形式
8,1.2.1.1.2,ダッシュボード,単一,COBOL言語構造特有の解析項目,,PERFORM文のネスト深度,"PERFORM文のネストレベルを解析し、最大ネスト深度を計測する, 平均ネスト深度や各ネストレベルの出現回数も算出する","最大ネスト深度, 平均ネスト深度, 各ネストレベルの出現回数",AST,"レベル数, 回",,ネスト深度の上限値が定められている場合、比較が必要,グラフ（ヒストグラム）、テキスト記述
9,1.2.1.1.3,ダッシュボード,単一,COBOL言語構造特有の解析項目,,条件分岐の複雑性,IF文やEVALUATE文の数とネスト深度を解析し、サイクロマティック複雑度を計算する,"条件分岐の総数, 最大ネスト深度, 平均ネスト深度, サイクロマティック複雑度",AST,"回, レベル数, 数値",,複雑度の許容範囲が定められている場合、比較が必要,グラフ（棒グラフ）、テキスト記述
10,1.2.1.2.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,Mermaid記法によるフローチャート,プログラムの制御フローを解析し、Mermaid記法でフローチャートを生成する,フローチャート,AST,Mermaid記法のコード,分岐やループ、手続き呼び出し等を視覚的に表現する,,グラフ（フローチャート図）
11,1.2.1.2.2,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,シーケンス図,モジュール間や手続き間の呼び出し関係を解析し、シーケンス図を作成する,シーケンス図,AST,Mermaid記法のコード,時系列に沿ったメッセージ交換を視覚化する,,グラフ（シーケンス図）
12,1.2.1.2.3,ダッシュボード,単一,COBOL言語構造特有の解析項目,,制御構造の階層表示,プログラム内の制御構造のネストを解析し、階層構造を可視化する,制御構造の階層ツリー,AST,データ構造,深いネストや複雑な制御構造を特定する,,グラフ（ツリーダイアグラム）
13,1.2.1.2.4,ダッシュボード,単一,COBOL言語構造特有の解析項目,,分岐/ループの視覚化,分岐やループの位置と頻度を解析し、プログラム内での分布を可視化する,"分岐の数, ループの数",AST,回,,,グラフ（ヒートマップ、棒グラフ）
14,1.2.2.1.1.1,ダッシュボード,単一,データフロー・データ構造・DB関連,,変数定義とその属性,"WORKING-STORAGE SECTIONから全ての変数を抽出し、そのデータ型、サイズ、初期値を解析する, 変数の使用状況やスコープも解析する","変数名, データ型, サイズ, 初期値, 使用状況",AST,"文字列, PICフォーマット, バイト",参照のみ、更新ありなど,変数命名規則、データ型の使用基準があれば比較可能,表形式
15,1.2.2.1.1.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,GROUP項目の階層構造,"グループ項目のレベル番号を解析し、階層関係を構築する, グループ項目内の要素やネスト深度を可視化する","階層構造, ネスト深度",AST,"データ構造, レベル数",,階層深度の上限があれば比較可能,グラフ（ツリーダイアグラム）
16,1.2.2.1.1.3,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,REDEFINES句による再定義,"REDEFINES句を持つ変数を特定し、再定義関係を解析する, メモリ共有やデータのオーバーレイを確認する","再定義元・先の変数名, 再定義の数",AST,"文字列, 件",,REDEFINES句の使用制限があれば比較可能,表形式
17,1.2.2.1.2.1,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,パラメータ定義,"LINKAGE SECTIONからパラメータとして使用される変数を抽出する, 呼び出し元とのデータ受け渡しを解析する","パラメータ名, データ型, 受け渡し方法",AST,"文字列, PICフォーマット",BY REFERENCE、BY CONTENTなど,パラメータ命名規則があれば比較可能,表形式
18,1.2.2.1.2.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,共有データ構造,"共有されるデータ構造（グローバル変数や共通領域）を特定する, 他のプログラムやモジュールとのデータ共有箇所を解析する","データ構造名, 構造の詳細, 共有範囲",AST,"文字列, データ構造","項目名、データ型, プログラム間、モジュール間",共有データの使用基準があれば比較可能,表形式、グラフ（ツリーダイアグラム）
19,1.2.2.1.3.1,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,ファイルレコード構造,"FILE SECTIONからファイルのレコード構造を解析する, ファイルごとのレコードレイアウトを特定する","ファイル名, レコード項目名とデータ型, レコードのサイズ",AST,"文字列, バイト",,ファイルレイアウトの標準があれば比較可能,表形式
20,1.2.2.1.3.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,バッファ領域定義,"ファイル操作で使用されるバッファ領域の定義を解析する, バッファのサイズや割り当て方法を確認する","バッファ領域名, サイズ, バッファタイプ",AST,"文字列, バイト",入力バッファ、出力バッファ,バッファサイズの制限があれば比較可能,表形式
21,1.2.2.2.1.1,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,直接代入,"MOVE文を解析し、変数間のデータ移動を特定する, 代入元と代入先のデータ型の一致性を確認する","代入元・代入先の変数名, MOVE文の総数",AST,"文字列, 回",,,表形式
22,1.2.2.2.1.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,GROUP項目の一括移動,"グループ項目間でのMOVE文を特定する, 一括移動によるデータ構造の変更を解析する","グループ項目名, 一括移動の回数",AST,"文字列, 回",,一括移動の使用ガイドラインがあれば比較可能,表形式
23,1.2.2.2.1.3,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,型変換を伴う移動,"データ型が異なる変数間のMOVE文を解析する, 暗黙の型変換が発生している箇所を特定する","型変換の種類, 型変換を伴うMOVE文の数, 潜在的なデータ損失の有無",AST,"文字列, 回",,型変換の許容範囲が定められている場合、比較が必要,表形式
24,1.2.2.2.2.1,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,演算結果の代入,"COMPUTE文を解析し、演算式と結果の代入先を特定する, 演算に使用されている演算子や関数を解析する","演算式, 代入先変数名, 使用されている演算子",AST,文字列,+、 -、 *、 /、など,,表形式
25,1.2.2.2.2.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,中間変数の代入,"計算過程で使用される中間変数への代入を特定する, 中間変数のスコープや再利用状況を解析する","中間変数名, 使用箇所, 再利用回数",AST,"文字列, 行番号, 回",,中間変数の使用ガイドラインがあれば比較可能,表形式
26,1.2.2.2.3.1,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,文字列操作,"STRING文を解析し、文字列の結合操作を特定する, 文字列操作時のオーバーフローやトランケーションの可能性を確認する","結合元・結合先の変数名, 操作回数, オーバーフローの可能性, トランケーションの可能性",AST,"文字列, 回, 有/無",,,表形式
27,1.2.2.2.3.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ分割/結合,"UNSTRING文を解析し、文字列の分割操作を特定する, 分割後のデータの格納先や使用状況を解析する","分割元・分割先の変数名, 操作回数",AST,"文字列, 回",,,表形式
28,1.2.2.2.4.1,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データフローダイアグラム,変数間のデータの流れを解析し、データフローダイアグラムを作成する,データフローダイアグラム,AST,図,主なデータの生成元、変換箇所、利用先を視覚化する,,グラフ（データフロー図）
29,1.2.2.2.4.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ依存関係マトリクス,変数間の依存関係をマトリクス形式で整理する,データ依存関係マトリクス,AST,表,どの変数がどの変数に依存しているかを明確化する,,表形式
30,1.2.2.2.4.3,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ項目辞書,"すべてのデータ項目を抽出し、その属性と用途を整理する, 項目の説明や関連するビジネスロジックも記載する","データ項目名, データ型, 用途, 項目の説明",AST,"文字列, PICフォーマット",,データ項目の命名規則があれば比較可能,表形式
31,1.2.3.1.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,処理とデータの関連性把握,制御フローとデータフローを組み合わせ、各処理がどのデータを操作しているかを解析する,"処理とデータの関連マップ, 各処理で使用されるデータ項目の一覧",AST,"データ構造, 文字列",データ操作とそのタイミングを明確化する,,グラフ（フローチャートとデータフローの統合図）
32,1.2.3.1.2,ダッシュボード,単一,コード品質・保守性・最適化・規約順守関連,,クリティカルパスの特定,プログラム内で重要な処理経路やデータフローを特定する,"クリティカルパス上の処理名, クリティカルパスの長さ",AST,"文字列, ステップ数",処理時間や頻度を考慮して、ボトルネックとなる箇所を抽出する,,グラフ（強調表示されたフローチャート）
33,1.2.3.1.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,最適化機会の発見,"処理とデータの関連性から、重複処理や非効率な部分を特定する, パフォーマンス改善が可能な箇所を提案する","最適化が可能な箇所, 改善の見込み",AST,文字列,"行番号、処理名, ％、時間削減",,テキスト記述、表形式
34,1.3.1.1,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,命令規則違反,"コーディング規約に基づき、命令や構文の違反をチェックする, 特定の命令の使用禁止や制限事項を確認する","違反箇所数, 違反内容, 違反箇所",AST,"件, 文字列, 行番号",,コーディング規約が必要,表形式
35,1.3.1.2,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,インデント・整形状況,"ソースコードのインデントやフォーマットが規約に沿っているかを解析する, タブとスペースの混在や行の長さをチェックする","違反箇所数, 違反の詳細",コードファイル,"件, 文字列",,インデント規約が必要,テキスト記述、表形式
36,1.3.1.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,コメント記述状況,"コメント行数をカウントし、コード行数との比率を計算する, 必須コメント（モジュールヘッダー、関数説明など）の有無を確認する","コメント率, 必須コメントの欠落数",コードファイル,"%, 件",,コメント率の目標値や必須コメントの規定があれば比較可能,グラフ（パイチャート）、テキスト記述
37,1.3.2.1,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,デッドコード,到達不能なコードや未使用の手続きを特定する,"デッドコードの行番号, デッドコード箇所数",AST,"数値, 件",コントロールフロー解析を用いる,,表形式
38,1.3.2.2,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,未使用コマンド/関数/定数/変数/ポインタ,定義されているが使用されていない要素を特定する,"未使用要素の種類, 未使用要素の名前, 未使用要素の数",AST,"種類, 文字列, 件",,,表形式
39,1.3.2.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,重複コード,"類似または同一のコードブロックを検出する, コードクローン検出ツールを使用する","重複コードの範囲, 重複箇所数, 重複率",AST,"行番号, 件, %",,重複許容度の基準があれば比較可能,表形式
40,1.3.3.1,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,規模メトリクス,総行数、モジュール数、手続き数などを計測する,"総行数, モジュール数, 手続き数, 平均手続き長","コードファイル, AST","行, 個",コードのボリュームを定量化する,プロジェクトの平均値や標準値があれば比較可能,表形式、グラフ（棒グラフ）
41,1.3.3.2,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,複雑度メトリクス,サイクロマティック複雑度、エッセンシャル複雑度を計算する,"複雑度スコア, 平均複雑度, 複雑度の分布",AST,"数値, ヒストグラム",手続き毎の複雑度も算出する,複雑度の許容範囲が定められている場合、比較が必要,グラフ（棒グラフ、レーダーチャート）
42,1.3.3.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,品質メトリクス,可読性、保守性、再利用性などの品質指標を評価する,"品質スコア, 評価コメント",AST,"数値, 文字列",定性的な評価と定量的な指標を組み合わせる,品質評価基準があれば比較可能,グラフ（レーダーチャート）、表形式
43,1.3.4.1,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ結合度（Data Coupling）,モジュール間のデータ共有状況を解析し、結合度を評価する,"データ結合度スコア, 結合度のレベル",AST,"数値, 文字列","グローバル変数や共有データの使用頻度を算出する, 高、中、低",結合度の許容範囲が定められている場合、比較が必要,グラフ（ヒストグラム）
44,1.3.4.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データフローの複雑性,データの流れを解析し、複雑性を評価する,"複雑性スコア, 平均データフロー長",AST,"数値, ステップ数",データ依存関係の数や深さを計測する,複雑性の基準があれば比較可能,グラフ（棒グラフ）
45,1.3.4.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,未使用データ項目の検出,定義されているが使用されていないデータ項目を特定する,"未使用データ項目名, 検出数",AST,"文字列, 件",メモリの無駄遣いや潜在的なバグを防ぐ,,表形式
46,1.3.4.4,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ型の整合性,データ型の不一致や不適切な型変換をチェックする,"不整合箇所数, 不整合の詳細, 影響範囲",AST,"件, 文字列","暗黙的な型変換が問題を引き起こす可能性を評価する, 行番号、モジュール名",データ型使用のガイドラインがあれば比較可能,表形式
47,2.1.1.1,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,外部プログラム呼び出し,CALL文を解析し、外部プログラムの呼び出しを特定する,"呼び出し先プログラム名, 呼び出し回数, 呼び出し箇所",AST,"文字列, 回, 行番号",呼び出しパラメータやエラー処理も解析する,外部プログラム使用の制限があれば比較可能,表形式
48,2.1.1.2,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,外部プログラムからの参照,他のプログラムからの呼び出しがあるかを調査する,"呼び出し元プログラム名, 呼び出されている回数",AST,"文字列, 回",逆方向の依存関係を明らかにする,,表形式
49,2.1.2.1,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,JCL参照解析,関連するJCLを解析し、プログラムの実行パラメータや環境を特定する,"JCL名, 使用パラメータ, 関連するデータセット名",AST,文字列,JCLもAST解析できるか？,JCLの標準があれば比較可能,表形式
50,2.1.2.2,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,ジョブ依存関係,ジョブの実行順序や依存関係を解析する,"依存関係図, ジョブの実行順序",AST,"データ構造, リスト",JOB間のPRECEDENCEやTRIGGER条件を確認する,ジョブ管理のガイドラインがあれば比較可能,グラフ（フローチャート）
51,2.1.2.3,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,データセット使用状況,"JCLやプログラム内で使用されているデータセット名を抽出する, データセットのアクセスモードや共有状況を解析する","データセット名, アクセスモード, 使用箇所",AST,"文字列, 行番号",読み取り、書き込み,データセット管理のポリシーがあれば比較可能,表形式、テキスト記述
52,2.2.1.1,ダッシュボード,単一,データフロー・データ構造・DB関連,データベースアクセス・テーブル関連,SQL文の種類と頻度,ソースコード内の埋め込みSQLを解析し、種類と出現回数を集計する,"SQL文の種類, 出現回数, 全体に対する割合",AST,"文字列, 回, %",,データベースアクセスのガイドラインがあれば比較可能,表形式、グラフ（棒グラフ）
53,2.2.1.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データベースアクセス・テーブル関連,テーブル参照関係,"SQL文を解析し、参照されているテーブル名とその関係を特定する, テーブル間の結合やサブクエリの使用状況を解析する","テーブル名, 参照回数, テーブル間の関係",AST,"文字列, 回",JOIN条件,データベース設計の標準があれば比較可能,表形式、グラフ（ネットワーク図）
54,2.2.2.1,ダッシュボード,単一,データフロー・データ構造・DB関連,データベースアクセス・テーブル関連,DB種別検出（DB2、VSAM、IMSDB）,"使用されているデータベースの種類を特定する, 接続文字列やデータベース特有の命令を解析する","データベース種別, 使用箇所",AST,"文字列, 行番号",,,表形式
55,2.2.2.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データベースアクセス・テーブル関連,アクセスパターン分析,"データベースへのアクセス方法や頻度を解析する, トランザクションの長さや頻度を評価する","アクセスパターン, アクセス回数, 平均トランザクション長",AST,"文字列, 回, 操作数",シーケンシャル、ランダム,パフォーマンス基準があれば比較可能,表形式、グラフ（ヒストグラム）
56,2.2.2.3,ダッシュボード,単一,データフロー・データ構造・DB関連,データベースアクセス・テーブル関連,トランザクション境界,"トランザクション開始と終了の位置を特定する, BEGIN TRANSACTION、COMMIT、ROLLBACKなどの命令を解析する","トランザクション数, 境界位置, トランザクションの平均長",AST,"件, 行番号, 操作数",,トランザクション管理のガイドラインがあれば比較可能,テキスト記述、表形式
57,2.2.3.1,ダッシュボード,単一,バッチ処理・ソート関連,,バッチ構造,"バッチ処理の全体的な流れと構成要素を解析する, ステップごとの依存関係や処理内容を特定する","処理ステップ, ステップ数, スケジュール情報",AST,"文字列, 件",実行時間、頻度,バッチ処理の標準があれば比較可能,グラフ（フローチャート）、表形式
58,2.2.3.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,ファイル処理,ファイルの読み書き操作を特定し、使用されているファイル名やモードを解析する,"ファイル名, 操作種類, アクセスモード",AST,文字列,"読み取り、書き込み, シーケンシャル、ランダム",ファイル操作のガイドラインがあれば比較可能,表形式
59,2.2.3.3,ダッシュボード,単一,バッチ処理・ソート関連,,ソート/マージ,"SORT文やMERGE文を解析し、その使用状況を特定する, ソートキーやマージ条件も解析する","ソート/マージの回数, 対象データ, ソートキー",AST,"回, 文字列",,パフォーマンス基準があれば比較可能,テキスト記述、表形式
60,2.2.4.1,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ項目間の依存関係,"データ項目の生成元と使用先を解析し、依存関係を特定する, データの流れを明確化する","データ項目名, 依存関係, 依存度",AST,"文字列, 数値",マッピング,,グラフ（データフロー図）、表形式
61,2.2.4.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ変換パターン,"データの変換処理を解析する, 共通の変換パターンを分類する","変換パターン, 該当箇所数, 影響を受けるデータ項目",AST,"文字列, 件",型変換、フォーマット変更など,データ変換の標準があれば比較可能,表形式
62,2.2.4.3,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ整合性チェック,"データ検証やエラーチェックの実装箇所を特定する, チェック内容を解析する","チェック項目, 実装箇所, チェックの種類",AST,"文字列, 行番号",範囲、形式、一意性,データ品質基準があれば比較可能,表形式
63,2.2.5.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,共通データ操作の特定,"頻繁に使用されるデータ操作を特定する, 再利用可能な処理を抽出する","操作内容, 使用回数, 対象データ項目",AST,"文字列, 回",特定の計算やフォーマット処理,共通処理のライブラリ化が推奨されている場合、比較が必要,表形式
64,2.2.5.2,ダッシュボード,単一,データフロー・データ構造・DB関連,データフロー・依存関係・品質,データ変換ロジックの分類,"データ変換処理をパターン別に分類する, 変換の目的や手法を明確化する","変換パターン, 該当箇所数, 使用されているアルゴリズム",AST,"文字列, 件",,データ変換の標準があれば比較可能,表形式
65,2.2.5.3,ダッシュボード,単一,コード品質・保守性・最適化・規約順守関連,,エラー処理パターン,"エラーハンドリングの実装方法を解析し、パターンを特定する, 共通のエラー処理ルーチンの有無を確認する","エラー処理パターン, 使用箇所数, エラー種類",AST,"文字列, 件",致命的、警告、情報,エラー処理のガイドラインがあれば比較可能,表形式
66,2.3.1.1,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,プロトコル検出,"ソースコード内で外部システムと通信する際に使用されているプロトコルを特定する, 通信ライブラリやAPIの使用状況を解析する","使用されているプロトコル名, プロトコルの使用回数, 使用箇所",AST,"文字列, 回, 行番号",TCP/IP、HTTP、MQなど,標準的に使用すべきプロトコルのガイドラインがあれば比較可能,表形式、テキスト記述
67,2.3.1.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,データフォーマット,"データ交換時に使用されているデータフォーマットを特定する, データシリアライゼーションの方法やフォーマット変換の有無を解析する","データフォーマットの種類, 使用頻度, 対象となるデータ項目",AST,"文字列, 回",XML、JSON、CSVなど,データフォーマットの標準があれば比較可能,表形式、グラフ（円グラフ）、テキスト記述
68,2.3.1.3,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,システム依存関係,外部システムとの依存関係を解析し、どのシステムとどのようなやり取りがあるかを特定する,"外部システム名, 依存関係の種類, 通信頻度",AST,文字列,"インターフェース仕様や通信内容を解析する, データ送受信、API呼び出しなど, 回数、時間帯",システム間連携のガイドラインがあれば比較可能,表形式、グラフ（ネットワーク図）
69,2.3.2.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,画面制御方式,ソースコード内の画面制御に関する命令やライブラリの使用状況を解析する,"使用されている画面制御方式, 使用回数, 使用箇所",AST,"文字列, 回, 行番号",CICS、BMSなど,標準的な画面制御方式が定められている場合、比較が必要,表形式、テキスト記述
70,2.3.2.2,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,画面セクション構造,SCREEN SECTIONの定義を解析し、画面項目やレイアウトを特定する,"画面項目名, レイアウト情報, フィールド属性",AST,文字列,"フィールド属性や検証ルールも解析する, 位置、属性など, 入力、表示のみ",画面設計のガイドラインがあれば比較可能,表形式、グラフ（画面レイアウト図）
71,2.3.2.3,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,端末I/O,"ACCEPTやDISPLAYなどの端末入出力命令の使用状況を解析する, 入出力のタイミングや頻度を特定する","端末I/O命令の使用回数, 使用箇所, 入出力データ項目",AST,"回, 行番号, 文字列",,端末I/Oの使用ガイドラインがあれば比較可能,表形式
72,2.3.3.1,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,出力フォーム定義の解析,プログラム内で定義されている出力フォームの定義部分を解析する,"フォーム名, フォームの項目一覧, フォームの階層構造",AST,"文字列, データ構造","REPORT SECTIONや書式指定されたWRITE文などを解析する, 項目名、データ型、位置情報",フォーム定義に関するコーディング規約や設計標準があれば比較可能,表形式（フォーム項目の一覧）、グラフ（フォームレイアウト図）
73,2.3.3.2,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,フォームレイアウトの可視化,フォームのレイアウト情報をもとに、実際の出力イメージを可視化する,"フォームのレイアウト図, フォームのイメージプレビュー",AST,"図, イメージ",位置指定や書式指定を解析し、フォームの見た目を再現する,出力フォームのデザイン標準があれば比較可能,グラフ（フォームのレイアウト図）、イメージ（プレビュー画像）
74,2.3.3.3,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,フォーム項目の属性分析,"フォーム内の各項目について、属性を解析する, フォントやスタイル情報も解析する","項目名, データ型, 表示形式, 編集規則, スタイル情報",AST,"文字列, PICフォーマット","データ型、表示形式、編集規則などを解析する, フォント、サイズ",項目属性や表示形式に関するガイドラインがあれば比較可能,表形式（項目の属性一覧）
75,2.3.3.4,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,フォーム出力ロジックの追跡,"フォームへのデータ出力処理を追跡する, MOVE文やWRITE文などを解析する","データ項目とフォーム項目のマッピング, 出力処理の箇所",AST,"データ構造, 行番号",,データとフォーム項目の対応に関する設計標準があれば比較可能,表形式（データとフォーム項目のマッピング一覧）、グラフ（データフロー図）
76,3.1.1.1,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,プラットフォーム依存性,プラットフォーム固有の命令やAPIの使用箇所を特定する,"プラットフォーム依存部分の使用回数, 使用箇所, 依存しているプラットフォームの種類",AST,"回, 行番号, 文字列","アセンブラコード内で特定のハードウェアやOSに依存する命令セットや拡張機能も検出する, OS、ハードウェア",プラットフォーム非依存性のガイドラインがあれば比較可能,表形式
77,3.1.1.2,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,コードの理解難易度,複雑な構造や特殊な記法の使用箇所を解析する,"理解難易度スコア, 複雑な箇所のリスト, 平均難易度",AST,"数値, 行番号, 文字列","サイクロマティック複雑度やネストの深さ、コメント率などのコードメトリクスも算出する, 高・中・低で分類",コードの複雑度評価基準があれば比較可能,グラフ（レーダーチャート）、表形式
78,3.1.2.1,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,メーカー方言分析,"特定メーカーの方言や拡張機能の使用箇所を特定する, 方言特有の予約語や構文、組み込み関数も検出する","方言の種類, 使用回数, 該当箇所の詳細情報",AST,"文字列, 回","IBM、日立、NEC、富士通、ユニシス, 行番号、コードスニペット",標準COBOLへの準拠度を評価する基準があれば比較可能,表形式、グラフ（円グラフ、棒グラフ）
79,3.1.2.2,ダッシュボード,単一,データフロー・データ構造・DB関連,ファイル・レコード・フォーマット関連,文字コード分析,"使用されている文字コードを特定する, コード内で文字コードを明示的に扱っている箇所を検出する","文字コードの種類, 文字コードが混在している箇所の割合",AST,"文字列, %",EBCDIC、Shift-JIS,文字コードの統一基準があれば比較可能,テキスト記述、グラフ（円グラフ、棒グラフ）
80,3.1.2.3,ダッシュボード,単一,外部連携・システム依存・JCL・プラットフォーム関連,,ダイアレクト特性分析,特殊な構文やキーワードの使用状況を解析する,"使用されている特殊構文の種類, 使用回数, 特殊構文の使用目的や代替可能な標準構文の提案",AST,"文字列, 回",非標準的なデータ型やファイルシステム、制御構造も検出,,表形式、グラフ
81,3.2.1.1,ダッシュボード,単一,セキュリティ・脆弱性関連,,SQLインジェクション,埋め込みSQLの部分で、ユーザー入力が直接SQL文に組み込まれている箇所を特定する,"脆弱な箇所の数, 該当箇所, 脆弱性の深刻度",AST,"件, 行番号, 文字列","パラメータ化されていないクエリや入力値のバリデーション不足も検出する, 高・中・低",セキュアコーディングガイドラインが必要,表形式
82,3.2.1.2,ダッシュボード,単一,セキュリティ・脆弱性関連,,バッファオーバーフローほか,データの受け渡し部分でのサイズチェックを解析する,"脆弱な箇所の数, 該当箇所, 脆弱性の種類",AST,"件, 行番号, 文字列","配列や文字列操作での境界チェック不足や、ポインタ操作の不備も検出する, スタックオーバーフロー、ヒープオーバーフローなど",セキュアコーディングガイドラインが必要,表形式、グラフ（棒グラフ、円グラフ）
83,3.2.1.3,ダッシュボード,単一,セキュリティ・脆弱性関連,,安全でないファイル操作等,ファイル操作時のエラーチェックやアクセス制御を解析する,"問題のあるファイル操作の数, 該当箇所, 具体的な問題点",AST,"件, 行番号, 文字列","ファイルパスの検証不足や一時ファイルの安全な使用方法も検討する, エラーハンドリング欠如、権限設定不備",セキュアコーディングガイドラインが必要,表形式
84,3.2.2.1,ダッシュボード,単一,セキュリティ・脆弱性関連,,CVEデータベース連携,使用されているライブラリやモジュールのCVE情報を確認する,"該当するCVE番号, 影響を受ける箇所, 脆弱性の詳細情報",AST,"文字列, 行番号","ライブラリのバージョン情報を取得し、最新のCVE情報と照合する, 深刻度、攻撃方法、影響範囲",,表形式
85,3.2.2.2,ダッシュボード,単一,セキュリティ・脆弱性関連,,セキュリティ脆弱性スコアリング,"検出された脆弱性の深刻度を評価する, 環境特有の要因を考慮した環境評価も計算する","脆弱性のスコア, 深刻度のレベル, 各脆弱性の影響要因",AST,"数値, 文字列","CVSSスコアなどを用いて深刻度を評価する, 高、中、低, 機密性、完全性、可用性への影響度",CVSS（共通脆弱性評価システム）の基準が必要,表形式、グラフ（棒グラフ）
86,3.2.2.3,ダッシュボード,単一,セキュリティ・脆弱性関連,,推奨対策提示,検出された脆弱性に対して対策方法や修正案を提示する,"推奨される対策内容, 対策の実施優先度や影響範囲",AST,文字列,公式のセキュリティアドバイザリやパッチ情報も参照する,セキュリティガイドラインが必要,テキスト記述
87,3.3.1.1,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,モジュール分割推奨箇所,大規模で複雑なモジュールを特定し、適切なサイズに分割する提案を行う,"対象モジュール名, 推奨される分割数, 分割後のモジュールの役割や相互関係",AST,"文字列, 数, データ構造",機能ごとの凝集度やモジュール間の結合度も評価する,モジュールのサイズや複雑度に関する基準が必要,表形式、モジュール構成図、フローチャート
88,3.3.1.2,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,ロジック最適化候補,非効率なアルゴリズムや無駄な処理を特定する,"問題のあるロジック箇所, 最適化提案, 最適化による性能向上の予測値",AST,"行番号, 文字列, 数値",パフォーマンスプロファイリングを行い、ボトルネックを特定する,パフォーマンス向上のためのベストプラクティスが必要,表形式、グラフ
89,3.3.1.3,ダッシュボード,単一,コード品質・保守性・最適化・規約遵守関連,,保守性向上施策,コードの可読性や保守性を低下させる要因を特定する,"改善が必要な箇所, 改善提案, 改善による効果",AST,"行番号, 文字列","長過ぎる関数、深いネスト、命名規則違反などを検出する, 可読性向上、バグ減少",コーディング規約や保守性評価基準が必要,テキスト記述、表形式
90,3.3.1.4,ダッシュボード,単一,可視化・UI・フォーム・画面関連,,共通化推奨処理,重複している処理やコードを特定する,"重複している処理の箇所, 共通化によるメリット, 共通モジュール化による保守性や品質向上の効果",AST,"行番号, 文字列",コードクローン検出ツールを使用し、重複度や類似度を評価する,コードの再利用性に関するガイドラインが必要,表形式、グラフ
91,1.1.1.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,プログラム数・目的の一覧,"各COBOLソースの解析結果から、プログラム名を集計し一覧を作成する, 各COBOLソースの解析結果から、プログラムの目的やメタデータを集計する, 各COBOLソースの開発者名、作成日、バージョン情報、依存関係を集計する","プログラム名一覧, プログラム目的, メタデータ情報",解析結果,文字列,,,表形式
92,1.1.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,全プログラムの更新履歴サマリ,"各ソースの更新履歴情報を集計し、時系列でサマリを作成する, 各プログラムの更新回数を集計する, プログラム全体の更新傾向を分析する","更新履歴一覧, プログラムごとの更新回数, 変更頻度の傾向分析",解析結果,"文字列, 件",,更新履歴の記載フォーマットがある場合、比較可能,表形式、グラフ
93,1.1.1.3.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,プログラム毎の行数比較,"各プログラムの総行数を集計し比較する, 各プログラムのコメント行数、空行数、実装コード行数を集計する","総行数比較, 行数内訳比較",解析結果,行,,プログラムの規模を評価するために他のプログラムと比較可能,グラフ（棒グラフ）、表形式
94,1.1.1.3.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,平均行数,"全プログラムの総行数の平均を算出する, 全プログラムのコメント行数、実装コード行数の平均を算出する","平均総行数, 平均行数内訳",解析結果,行,,組織内での標準的なプログラム行数があれば比較可能,テキスト記述、グラフ（棒グラフ）
95,1.1.1.3.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,最大・最小行数,"最大行数と最小行数を持つプログラムを特定する, 最大・最小プログラムの詳細情報を集計する","最大最小行数プログラム, プログラム詳細情報",解析結果,"行, 文字列",,プログラムの規模に関するガイドラインがあれば比較可能,テキスト記述、表形式
96,1.1.1.4,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,DIVISION毎の構成比（全体）,"各プログラムのDIVISIONの行数を合計し、全体の構成比を算出する, SECTIONやPARAGRAPHの行数も集計する, DIVISIONごとの平均、最大、最小の行数を算出する","各DIVISIONの総行数, 全体に対する割合, 統計情報",解析結果,"行, %",,標準的なプログラム構成比があれば比較可能,グラフ（パイチャート）、表形式
97,1.1.2.1.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,言語構造,COPY文の使用頻度,"全プログラムでのCOPY文の出現回数を集計する, COPY文が使用されているセクションの分布を分析する","総COPY文使用回数, セクション別使用統計",解析結果,回,,共通部品の使用ガイドラインがあれば比較可能,テキスト記述、グラフ（棒グラフ）
98,1.1.2.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,再利用性、標準化,共通COPYブックの使用状況,"使用されているCOPYブックの種類と使用頻度を集計する, COPYブックの内容を分類し、集計する, COPYブックの依存関係や変更履歴を集計する","COPYブック名と使用頻度, COPYブックの分類結果, 変更履歴と依存関係",解析結果,"回, 文字列, データ構造",,共通部品の利用基準があれば比較可能,表形式、グラフ（棒グラフ、ネットワーク図）
99,1.1.2.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,再利用性、共通化,共通モジュールの使用状況,"全プログラムで呼び出されている共通モジュールを集計する, モジュール間の依存関係をマッピングする","共通モジュール名と使用回数, 依存関係マップ",解析結果,"回, データ構造",,共通モジュールの使用方針があれば比較可能,表形式、グラフ（依存関係図、コールグラフ）
100,1.2.1.1.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,GOTO文の使用状況,"全プログラムからGOTO文を抽出し使用回数を集計する, プログラムごとの使用回数を集計する, 無限ループの可能性のある箇所を集計する","総GOTO文使用回数, プログラム別使用回数, リスク箇所一覧",解析結果,"回, 箇所",,GOTO文の使用制限がコーディング規約に定められている場合比較可能,表形式、グラフ（棒グラフ、制御フロー図）
101,1.2.1.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,PERFORM文のネスト深度の分布,"各プログラムのPERFORM文のネスト深度を集計する, 最大ネスト深度を持つプログラムを特定する","ネスト深度分布, 最大ネスト深度プログラム",解析結果,"件, 文字列",,ネスト深度の許容範囲が定められている場合比較可能,グラフ（ヒストグラム）、表形式
102,1.2.1.1.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,サイクロマティック複雑度解析,条件分岐の複雑性の評価,"各プログラムのサイクロマティック複雑度を集計する, プログラム全体の平均複雑度を算出する, 複雑度の高いプログラムのランキングを作成する","複雑度分布, 平均複雑度, 複雑度ランキング",解析結果,"数値, リスト",,複雑度の許容範囲がある場合比較可能,表形式、グラフ（棒グラフ、散布図）
103,1.2.1.2.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,可視化,主要フローチャートの生成,"全プログラムから主要プログラムを選定する, 選定されたプログラムの制御フローを統合可視化する","主要プログラム一覧, 統合フローチャート",解析結果,"文字列, 図",Mermaid記法や他のダイアグラムツールを使用,,グラフ（フローチャート）、インタラクティブ表示
104,1.2.1.2.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,可視化、外部モジュール呼び出し解析,シーケンス図の総合,"プログラム間の呼び出し関係を統合的に解析する, タイミング情報や並行処理の有無を集計する","統合シーケンス図, タイミング情報",解析結果,"図, データ構造",,,グラフ（シーケンス図）、インタラクティブ表示
105,1.2.1.2.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,制御構造の階層表示,"各プログラムの制御構造を階層的に統合する, 条件分岐やループの詳細を集計する","制御構造階層図, 制御構造詳細",解析結果,"図, データ構造",,,グラフ（ツリーダイアグラム）、インタラクティブ表示
106,1.2.1.2.4,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,分岐/ループの頻度分析,"全プログラムの分岐文とループ文の出現回数を集計する, 分岐条件の複雑さやループの種類を分析する, プログラムごとの平均値、最大・最小値を算出する","分岐・ループ総数, 分岐・ループ分析, 統計情報",解析結果,"件, 文字列, 数値",,コードの複雑性に関する基準があれば比較可能,グラフ（棒グラフ）、表形式
107,1.2.2.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データ構造分析,WORKING-STORAGE SECTIONの共通パターン,"共通して使用されているデータ項目を特定する, データ項目の出現頻度を集計する, データ項目の属性を比較分析する","共通データ項目, 出現頻度, 項目属性分析",解析結果,"文字列, 件, データ構造",,データ定義の標準があれば比較可能,表形式、グラフ（棒グラフ）
108,1.2.2.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,外部連携インターフェース把握,LINKAGE SECTIONの使用状況,"LINKAGE SECTIONを使用しているプログラム数を集計する, データ項目数と型・サイズを集計する","使用プログラム数, データ項目統計",解析結果,件,,外部連携の設計方針があれば比較可能,表形式、グラフ（ネットワーク図）
109,1.2.2.1.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,FILE SECTIONのレコード構造の共通点,"各プログラムのレコード構造の共通点を特定する, 共通レコード項目の出現頻度を集計する, レコードの長さやフィールドの位置を分析する","共通レコード項目, 項目出現頻度, レコード構造分析",解析結果,"文字列, 件, データ構造",,ファイル構造の標準があれば比較可能,表形式、図解（レコードレイアウト図）
110,1.2.2.2.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,データ移動と型変換分析,MOVE文の使用傾向,"全プログラムのMOVE文の使用パターンを分析する, データ型の互換性や型変換の状況を集計する, エラーの可能性がある型変換を集計する","MOVE文の総数, 型変換パターン, リスク集計",解析結果,"件, 文字列",,データ移動の効率化に関するガイドラインがあれば比較可能,グラフ（棒グラフ）、表形式
111,1.2.2.2.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,演算処理の最適化,COMPUTE文の使用傾向,"全プログラムのCOMPUTE文の使用状況を集計する, 複雑な計算式や頻出する計算処理を特定する, 計算エラーのリスクがある箇所を集計する","COMPUTE文の総数, 計算パターン, エラーリスク箇所",解析結果,"件, 文字列",,計算処理の最適化ガイドラインがあれば比較可能,グラフ（棒グラフ）、表形式
112,1.2.2.2.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,文字列操作可読性・品質,STRING/UNSTRING操作の頻度,"全プログラムのSTRINGとUNSTRING文の出現回数を集計する, 文字列操作のパターンや共通処理を特定する, 文字列処理に関連するエラーの可能性を集計する","操作総数, 操作パターン分析, エラー可能性集計",解析結果,"件, 文字列",,文字列操作の標準があれば比較可能,グラフ（棒グラフ）、表形式
113,1.2.2.2.4.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データフロー可視化,データフローダイアグラムの統合,"各プログラムのデータフローを統合し全体像を可視化する, データの流れの重要なノードやボトルネックを特定する","統合データフロー図, 重要ポイント分析",解析結果,"図, 文字列",,,グラフ（データフローダイアグラム）、インタラクティブ表示
114,1.2.2.2.4.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データ間依存分析,データ依存関係マトリクス,"データ項目間の依存関係を全体でマトリクス化する, 循環依存を検出する","依存関係マトリクス, 循環依存検出結果",解析結果,"表, 件",,データ設計の標準があれば比較可能,表形式、グラフ（ヒートマップ）
115,1.2.3.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連","制御フロー+データフロー統合
",処理とデータの関連性の全体把握,"各プログラムの制御フローとデータフローを統合分析する, 全プログラム間の処理とデータの関連を集計する","処理データ関連マップ, 関連性集計",解析結果,"図, データ構造",データの生成、変換、消費ポイントを特定,業務プロセスモデルやデータモデルがあれば比較可能,グラフ（フローチャートとデータフローの統合図）
116,1.2.3.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,パフォーマンス・重要処理経路特定,クリティカルパスの特定と比較,"システム全体のパフォーマンスに影響を与える処理経路を特定する, 処理の依存関係や並行性を評価する","クリティカルパス, 処理依存評価",解析結果,"文字列, データ構造",,パフォーマンス要件やSLAがあれば比較可能,グラフ（クリティカルパス強調フローチャート）、ガントチャート
117,1.2.3.1.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,最適化機会の全体発見,"重複処理や非効率なアルゴリズムを特定する, パフォーマンスボトルネックを抽出する, 予想される性能向上率を算出する","最適化候補箇所, ボトルネック分析, 性能向上予測",解析結果,"文字列, データ構造, %",,パフォーマンス改善のガイドラインがあれば比較可能,表形式、グラフ
118,1.3.1.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,コーディング規約,命令規則違反の総数,"全プログラムの規約違反を集計する, 違反種類別の件数を集計する, プログラムごとの違反数を集計する","規約違反の総数, 違反種類別集計, プログラム別違反数",解析結果,件,,コーディング規約が必要,表形式、グラフ
119,1.3.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,コードスタイル,インデント・整形状況の評価,"コードの整形状態を集計評価する, プログラムごとの違反数を集計する","インデント違反の総数, プログラム別違反数",解析結果,件,,インデント規約が必要,表形式、コード例
120,1.3.1.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,コメント記述状況の統計,"全プログラムのコメント率を集計する, プログラムごとのコメント率を算出する, コメント不足箇所をリストアップする","コメント行数合計, プログラム別コメント率, コメント不足箇所一覧",解析結果,"行, %, リスト",,コメント率の目標値やコメント記述に関するガイドラインが必要,グラフ（パイチャート）、表形式
121,1.3.2.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,デッドコードの総数,"到達不能なコードの総量を集計する, プログラムごとのデッドコード量を集計する","デッドコードの総数, プログラム別デッドコード数",解析結果,行,,,表形式、グラフ
122,1.3.2.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,未使用要素の統計,"未使用の定数、変数、関数等を集計する, 要素の種類別に集計する, プログラムごとの未使用要素を集計する","未使用要素の総数, 要素別件数, プログラム別未使用要素数",解析結果,件,,コーディング規約や最適化方針があれば比較可能,表形式、グラフ（円グラフ）
123,1.3.3.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,規模メトリクスの比較,"全プログラムの規模メトリクスを集計する, プログラム間でメトリクスを比較する","総規模メトリクス, メトリクス比較結果",解析結果,数値,,プログラム規模の基準があれば比較可能,表形式、グラフ（棒グラフ、箱ひげ図）
124,1.3.3.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,複雑度メトリクスの平均値,"全プログラムの複雑度を集計し平均を算出する, 複雑度の分布を分析する","複雑度平均値, 複雑度分布",解析結果,"数値, ヒストグラム",,複雑度の許容範囲があれば比較可能,テキスト記述、グラフ
125,1.3.3.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,品質メトリクスの評価,"全プログラムの品質指標を統合評価する, プログラムごとの品質評価を集計する, 品質指標別の詳細スコアを算出する","品質スコア, プログラム別品質評価, 指標別スコア",解析結果,"数値, ランク/数値",,品質評価基準が必要,表形式、グラフ（レーダーチャート）
126,1.3.4.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",モジュール間結合度,データ結合度の評価,"モジュール間のデータ共有状況を総合評価する, モジュールごとの結合度を集計する","データ結合度スコア, モジュール別結合度",解析結果,"数値, 数値/ランク",,結合度の許容範囲が定められていれば比較可能,グラフ（ヒストグラム）、表形式
127,1.3.4.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",,データフローの複雑性の比較,"プログラム全体のデータフロー複雑度を集計する, プログラムごとの複雑度分布を分析する","データフロー複雑度, 複雑度分布",解析結果,"数値, 数値/ランク",,データフロー複雑度の基準があれば比較可能,グラフ（棒グラフ）
128,1.3.4.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,未使用データ項目の総数,"全プログラムの未使用データ項目を集計する, プログラムごとの未使用データ項目を集計する","未使用データ項目の総数, プログラム別未使用項目数",解析結果,件,,データ定義の最適化基準があれば比較可能,表形式
129,1.3.4.4,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データ型整合性,データ型の整合性のチェック,"データ型の不一致や不適切な型変換を集計する, プログラムごとの不整合数を集計する, 不整合の詳細をリスト化する","不整合箇所数, プログラム別不整合数, 不整合詳細一覧",解析結果,"件, 文字列",,データ型使用のガイドラインが必要,表形式
130,2.1.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,外部プログラム呼び出しの一覧,"全プログラムのCALL文やINVOKE文を集計する, 呼び出しの種類と回数を集計する","外部プログラム名一覧, 呼び出し統計",解析結果,"文字列, 回",,外部プログラムの使用ポリシーが必要,表形式、グラフ
131,2.1.1.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,外部プログラムからの参照の統計,"プログラム間の逆参照関係を集計する, 被呼び出し回数を集計する","逆参照一覧, 被呼び出し統計",解析結果,"文字列, 回",,外部からの参照制限や設計ポリシーが必要,表形式、グラフ
132,2.1.2.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,JCL参照の全体解析,"プログラムとJCLの対応を集計する, 使用パラメータとジョブステップを集計する","JCL対応一覧, JCLパラメータ集計",解析結果,文字列,,JCLの使用標準があれば比較可能,表形式、JCL構造図
133,2.1.2.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,ジョブ依存関係のマッピング,"JCL内の依存関係情報を集計する, ジョブの実行順序や条件分岐を集計する","ジョブ依存関係図, ジョブ実行条件",解析結果,"データ構造, 文字列",,ジョブスケジューリングの基準が必要,グラフ（フローチャート）、タイムライン図
134,2.1.2.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連：ファイル関連",,データセット使用状況の統計,"データセット名とアクセスモードを集計する, データセットの使用頻度や共有状況を集計する","データセット使用状況, データセット共有分析",解析結果,"文字列, 回",,データセット管理のポリシーが必要,表形式、グラフ（ヒストグラム）
135,2.2.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データベースアクセス・テーブル関連",,SQL文の種類と頻度の統計,"埋め込みSQLの種類別の出現回数を集計する, 使用プログラム数と全体の割合を集計する","SQL種類別集計, SQL使用統計",解析結果,"回, %",,データベースアクセスのガイドラインが必要,表形式、グラフ
136,2.2.1.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データベースアクセス・テーブル関連",,テーブル参照関係のマッピング,"テーブルとプログラムの関係を集計する, アクセス種類と頻度を集計する","テーブル参照マップ, テーブルアクセス統計",解析結果,"文字列, 回",,テーブルの使用制限があれば比較可能,グラフ（マトリクス図）、表形式
137,2.2.2.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データベースアクセス・テーブル関連",,DB種別の検出状況,"使用されているDB種別を集計する, DB種別ごとの使用状況を集計する","DB種別一覧, DB使用状況",解析結果,"文字列, 件",,データベース統一の方針が必要,表形式、グラフ
138,2.2.2.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データベースアクセス・テーブル関連",,アクセスパターンの全体分析,"DBアクセスパターンを分類し集計する, 時間帯別のアクセス頻度を分析する","アクセスパターン集計, 時間帯別アクセス分析",解析結果,回,,データベースアクセスの最適化基準が必要,グラフ、表形式
139,2.2.2.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データベースアクセス・テーブル関連",,トランザクション境界の特定,"トランザクション制御文の使用状況を集計する, トランザクションの長さと頻度を分析する","トランザクション数, トランザクション分析",解析結果,"件, ステップ数",,トランザクション管理のガイドラインが必要,表形式、グラフ
140,2.2.3.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連",,バッチ構造の共通パターン,"バッチ処理の共通パターンを特定し集計する, パターンごとの特徴と利点を評価する","共通パターン一覧, パターン評価",解析結果,文字列,,バッチ処理の設計標準が必要,グラフ（フローチャート）、表形式
141,2.2.3.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル関連,ファイル処理の使用状況,"ファイル操作命令の使用状況を集計する, プログラムごとのファイル操作を分析する","ファイル操作統計, プログラム別分析",解析結果,"回, 件",,ファイルI/Oの最適化ガイドラインが必要,表形式、グラフ（棒グラフ）
142,2.2.3.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連",,ソート/マージの頻度,"SORT文とMERGE文の使用状況を集計する, ソート/マージのデータ量を評価する","ソート/マージ統計, データ量分析",解析結果,"件, レコード数",,ソート/マージの使用基準が必要,グラフ、表形式
143,2.2.4.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",,データ項目間の依存関係の統合,"データ項目間の依存関係を全体で分析する, データ項目の定義と使用状況を集計する","依存関係マップ, 項目使用状況",解析結果,"データ構造, 回",,データフロー設計の標準が必要,グラフ（データフロー図）、表形式
144,2.2.4.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",,データ変換パターンの分類,"データ変換ロジックのパターンを分類し集計する, パターンごとの使用頻度を分析する","変換パターン一覧, パターン使用頻度",解析結果,"文字列, 回",,データ変換の標準化ルールが必要,表形式、グラフ
145,2.2.4.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データ品質評価,データ整合性チェックの結果,"チェック処理の実装状況を集計する, チェック不足箇所を特定し集計する","チェック実装状況, チェック不足分析",解析結果,件,,データ品質の基準が必要,表形式、グラフ
146,2.2.5.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",再利用性,共通データ操作の特定,"頻出するデータ操作を集計する, 共通モジュール化の可能性を評価する","共通操作一覧, モジュール化評価",解析結果,"回, 文字列",,共通処理のモジュール化や再利用性のガイドラインが必要,表形式、グラフ
147,2.2.5.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",,データ変換ロジックの分類,"データ変換ロジックを種類別に集計する, プログラム間での共通性を分析する","変換ロジック分類, 共通性分析",解析結果,"件, 文字列",,データ変換の標準化ガイドラインが必要,表形式、グラフ
148,2.2.5.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,品質面でのエラー処理分析,エラー処理パターンの統計,"エラーハンドリング方法を集計する, エラー処理の適切性を評価する","エラー処理分類, 適切性評価",解析結果,"回, 文字列",,エラーハンドリングの標準化ガイドラインが必要,表形式、グラフ
149,2.3.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,プロトコルの検出状況,"使用プロトコルの種類と頻度を集計する, プロトコルのバージョンと設定を分析する","プロトコル使用状況, プロトコル設定分析",解析結果,"回, 文字列",,使用するプロトコルの標準や制限が必要,表形式、グラフ（円グラフ）
150,2.3.1.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,データフォーマットの共通点,"使用データフォーマットの種類と頻度を集計する, フォーマット仕様やスキーマを分析する","フォーマット使用状況, フォーマット仕様分析",解析結果,"件, 文字列",,データフォーマットの標準化ポリシーが必要,表形式、グラフ（棒グラフ）
151,2.3.1.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,システム依存関係のマッピング,"外部システムとの連携状況を集計する, データフローやAPI呼び出しを分析する","システム間連携マップ, 連携方式分析",解析結果,"データ構造, 文字列",,システム間連携の設計基準が必要,グラフ（依存関係図）、表形式
152,2.3.2.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面制御方式の統計,"画面制御方式の種類と使用状況を集計する, 各方式の使用割合を分析する","制御方式使用状況, 制御方式分布",解析結果,"件, %",,画面制御の標準化方針が必要,表形式、グラフ
153,2.3.2.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面セクション構造の共通パターン,"画面項目やレイアウトの共通パターンを集計する, パターンの使用頻度を分析する","共通パターン一覧, パターン使用頻度",解析結果,"文字列, 件",,画面設計の標準が必要,表形式、グラフ
154,2.3.2.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,端末I/Oの使用状況,"端末入出力命令の使用状況を集計する, 端末種類別の使用割合を分析する","I/O命令使用状況, 端末種類別分析",解析結果,"件, %",,端末I/Oの使用制限やガイドラインが必要,グラフ（棒グラフ）、表形式
155,2.3.3.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,出力フォーム定義の解析,"フォーム定義の共通点を集計する, フォームの再利用状況を評価する","フォーム定義分析, 再利用状況評価",解析結果,"データ構造, 件",,フォーム定義に関するコーディング規約や設計標準が必要,表形式、グラフ（フォームレイアウト図）
156,2.3.3.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,フォームレイアウトの可視化,"レイアウトの共通点や相違点を分析する, フォーム間のレイアウト類似度を評価する","レイアウト比較分析, レイアウト類似度",解析結果,"データ構造, %",,出力フォームのデザイン標準が必要,グラフ（レイアウト図）、イメージ
157,2.3.3.3,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,フォーム項目の属性分析,"フォーム項目の属性を集計・分類する, 項目の標準化レベルを評価する","項目属性集計, 標準化評価",解析結果,"データ構造, 文字列",,項目属性や表示形式に関するガイドラインが必要,表形式、グラフ
158,2.3.3.4,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,フォーム出力ロジックの追跡,"データとフォーム項目の対応関係を集計する, データソース別の出力項目を分析する","データマッピング一覧, ソース別分析",解析結果,"データ構造, 統計",,データとフォーム項目の対応に関する設計標準が必要,表形式、グラフ（データフロー図）
159,3.1.1.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連」",,プラットフォーム依存性の評価,"プラットフォーム依存箇所を集計する, 依存内容の種類別集計と影響度を分析する","依存箇所統計, 依存度分析",解析結果,"件, 数値",,プラットフォーム依存性の除去方針が必要,表形式、グラフ
160,3.1.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,コードの理解難易度の比較,"各プログラムの理解難易度をスコアリングする, プログラム間の難易度比較を行う","理解難易度スコア, 難易度比較",解析結果,"数値, ランク",,プラットフォーム依存性の除去方針が必要,グラフ（レーダーチャート）、表形式
161,3.1.2.1,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",ダイアレクト特性,メーカー方言の検出状況,"メーカー方言の種類と使用頻度を集計する, 方言の影響度を分析する","方言使用統計, 方言影響度",解析結果,"回, %",,標準COBOLへの準拠度を評価する基準が必要,表形式、グラフ
162,3.1.2.2,ダッシュボード,複数,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・文字コード関連,文字コードの使用状況,"文字コードの種類と使用状況を集計する, 文字コードの混在状況を分析する","文字コード使用状況, コード混在分析",解析結果,"件, %",,文字コードの統一方針が必要,テキスト記述、グラフ
163,3.1.2.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,ダイアレクト分析,ダイアレクト特性の分析結果,"ダイアレクト特性の種類と頻度を集計する, 特性ごとの影響度を評価する","特性使用状況, 特性影響度",解析結果,"回, 数値",,標準化のための移行ガイドラインが必要,表形式、グラフ
164,3.2.1.1,ダッシュボード,複数,セキュリティ・脆弱性関連,データベースアクセス・テーブル関連,SQLインジェクションの検出数,"SQLインジェクションの脆弱性を集計する, 脆弱性の深刻度を分析する","脆弱性件数, 深刻度分析",解析結果,"件, ランク",,セキュアコーディングガイドラインが必要,表形式、グラフ
165,3.2.1.2,ダッシュボード,複数,セキュリティ・脆弱性関連,,バッファオーバーフローの検出数,"バッファオーバーフローのリスクを集計する, 脆弱性の種類別集計を行う","リスク件数, 脆弱性分類",解析結果,件,,セキュリティ基準が必要,表形式、グラフ
166,3.2.1.3,ダッシュボード,複数,セキュリティ・脆弱性関連,ファイル操作のセキュリティ問題,安全でないファイル操作の検出数,"ファイル操作のセキュリティ問題を集計する, 問題の種類と重要度を分析する","セキュリティ問題件数, 問題分析結果",解析結果,"件, ランク",,セキュリティガイドラインが必要,表形式、グラフ
167,3.2.2.1,ダッシュボード,複数,セキュリティ・脆弱性関連,,CVEデータベースとの連携状況,"CVE該当箇所を集計する, 影響を受けるライブラリを分析する","CVE該当数, 影響ライブラリ分析",解析結果,"件, 文字列",,最新のCVEデータベースが必要,表形式、グラフ
168,3.2.2.2,ダッシュボード,複数,セキュリティ・脆弱性関連,,セキュリティ脆弱性スコアリングの結果,"CVSSスコアの分布を集計する, 環境要因を考慮した評価を行う","CVSSスコア分布, 環境要因評価",解析結果,数値,,CVSSの評価基準が必要,表形式、グラフ
169,3.2.2.3,ダッシュボード,複数,セキュリティ・脆弱性関連,,推奨対策の一覧,"脆弱性への対策方法を集計する, 対策の優先順位を分析する","対策一覧, 優先順位分析",解析結果,"文字列, ランク",,セキュリティポリシーやガイドラインが必要,表形式、テキスト
170,3.3.1.1,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,モジュール分割推奨箇所の一覧,"モジュール分割候補を集計する, 分割によるメリットを評価する","分割候補一覧, 分割効果分析",解析結果,文字列,,モジュールサイズや複雑度に関する基準が必要,表形式、グラフ
171,3.3.1.2,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,ロジック最適化候補の統計,"非効率なアルゴリズムを集計する, パフォーマンス改善効果を予測する","最適化候補数, 改善効果予測",解析結果,"件, %",,パフォーマンス改善のガイドラインが必要,表形式、グラフ
172,3.3.1.3,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,保守性向上施策の提案,"コードの保守性に関する問題を集計する, 改善による効果を評価する","保守性問題一覧, 改善効果評価",解析結果,"件, 文字列",,コーディング規約や保守性評価基準が必要,テキスト記述、表形式
173,3.3.1.4,ダッシュボード,複数,コード品質・保守性・最適化・規約順守関連,,共通化推奨処理の特定,"重複コードや共通処理を集計する, 共通化による品質向上効果を分析する","共通処理候補, 品質向上効果",解析結果,"件, 文字列",,コードの再利用性に関するガイドラインが必要,表形式、グラフ
174,1.1.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,プログラム名・目的,IDENTIFICATION DIVISIONのPROGRAM-IDからプログラム名を抽出する。AUTHOR、INSTALLATION、DATE-WRITTENなどの項目やコメント、メタデータからプログラムの目的を詳細に解析する,"プログラム名,プログラムの目的",AST,文字列,,,テキスト記述
175,1.1.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,プログラム基本構造,プログラムのDIVISION、SECTION、PARAGRAPHの構造を解析する。ASTを用いてセクションやパラグラフの役割を評価する,"プログラム構造のツリー,各構造の名称",AST,"データ構造,文字列",各構造間の関係性や制御フローを解析する,コーディング標準があれば比較可能,"グラフ(ツリーダイアグラム,フローチャート)"
176,1.1.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,更新履歴,ソースコード内のコメントから更新履歴情報を抽出する,更新履歴一覧,コードファイル,文字列,,更新履歴の記載フォーマットが標準化されている場合比較可能,表形式
177,1.1.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,行数統計,総行数、コード行数、コメント行数、空行数をカウントする。コメント率や空行率を計算する。DIVISION毎の行数を集計する,"総行数,コード行数,コメント行数,空行数,コメント率",コードファイル,"行,%",,コメント率の目標値などが標準として設定されていれば比較可能,"グラフ(パイチャート,棒グラフ)"
178,1.1.5,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,DIVISION別の構成比,各DIVISIONの行数をカウントし全体に対する割合を計算する,"各DIVISIONの行数,構成比",AST,"行,%",DATA DIVISION内の各SECTIONの行数も解析する,,"グラフ(パイチャート,棒グラフ),表形式"
179,1.2.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コーディング規約準拠性チェック,コーディング規約に基づき命名規則、インデント、コメントの有無、コードの整形をチェックする,"規約違反の件数,規約違反の詳細,違反の重大度",AST,"件,文字列",静的解析ツールを使用して自動的に違反箇所を検出する,コーディング規約が必要,表形式(違反一覧)
180,1.2.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,問題箇所のハイライト,規約違反や潜在的なバグとなるコード箇所を特定する,"問題箇所の行番号,問題内容の説明,問題の種類",AST,"数値,文字列",ASTを用いて深いネストや複雑な条件式などの可読性を損なう要素も検出する。コーディング規約違反、潜在バグ、可読性低下など,コーディング規約やベストプラクティスが必要,ソースコードビューア(問題箇所をハイライト表示)
181,1.2.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,リファクタリング推奨箇所,コードの複雑度や冗長性を解析し、改善が必要な箇所を特定する,"リファクタリング推奨箇所,改善提案内容,改善による予想効果",AST,"行番号,文字列",重複コードや長すぎるメソッド、グローバル変数の過度な使用なども検出する。可読性向上、保守性向上,コーディング標準やリファクタリングガイドラインが必要,表形式(リファクタリング提案一覧)
182,1.3.1.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コマンド参照/非参照関係性,使用されているCOBOLのコマンドとその参照関係を解析する,"コマンド名,参照回数,コマンドの使用箇所",AST,"文字列,回,行番号",特に重要なコマンドの使用状況を詳細に解析する,使用禁止コマンドのリストがあれば比較可能,"グラフ(コールグラフ),表形式"
183,1.3.1.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,関数参照/非参照関係性,自作関数や外部関数の呼び出し関係を解析する,"関数名,呼び出し元・呼び出し先,呼び出し回数",AST,"文字列,回",関数の入出力、引数のデータ型、戻り値なども解析する,関数の使用基準があれば比較可能,"グラフ(コールグラフ),表形式"
184,1.3.1.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,定数参照/非参照関係性,定数の定義と使用箇所を解析する,"定数名,使用箇所,定数の値,使用頻度",AST,"文字列,行番号,回",定数が適切に再利用されているか、マジックナンバーが使われていないかを確認する,定数の命名規則があれば比較可能,表形式
185,1.3.1.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,変数参照/非参照関係性,変数の宣言と参照関係を解析する,"変数名,参照回数,宣言箇所,スコープ",AST,"文字列,回,行番号",変数のスコープ、データ型、初期化の有無、使用されていない変数を検出する,変数の命名規則やスコープの使用方針があれば比較可能,表形式
186,1.3.1.5,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,ポインタ参照/非参照関係性,ポインタの使用状況と参照関係を解析する,"ポインタ名,使用箇所,ポインタの安全性",AST,"文字列,行番号",ポインタの初期化、解放処理、NULLチェックの有無を検証する,ポインタ使用のガイドラインがあれば比較可能,"表形式,警告箇所のハイライト"
187,1.3.1.6,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,その他参照/非参照関係性,上記以外の要素の参照関係を解析する,"要素名,参照関係,潜在的な問題点",AST,文字列,GOTO文、エラーハンドリング構造の分析、スパゲッティコード化、エラー未処理,,"グラフ,表形式"
188,1.3.2,ドキュメント,単一,COBOL言語構造特有の解析項目,,COPY文の使用状況,COPY文を全て抽出し、その使用箇所を解析する,"COPYファイル名,使用箇所,COPYファイルの内容概要,使用頻度",AST,"文字列,行番号,回",COPYされたコードの内容や依存関係を解析し、再利用性やモジュール性を評価する,共通部品の使用基準があれば比較可能,"表形式,依存関係図"
189,1.3.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,外部プログラム呼出/参照,CALL文や外部からのCALLを解析する,"外部プログラム名,呼び出し方向,呼び出し回数,パラメータ情報",AST,"文字列,回",呼び出し時のパラメータや戻り値の型、呼び出し条件などを詳細に解析する,外部インターフェースの仕様書があれば比較可能,"表形式,グラフ(依存関係図)"
190,1.3.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,共通モジュールの使用状況,共通モジュールの使用状況を解析する,"モジュール名,使用回数,モジュールの機能概要,バージョン情報",AST,"文字列,回",共通モジュールのバージョン、依存関係、更新頻度などを調査する,共通モジュールの利用ガイドラインがあれば比較可能,"表形式,グラフ(使用頻度)"
191,2.1.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,命名規約違反,コーディング規約に違反する命名や構文を検出する,"規約違反箇所数,違反内容の詳細,違反の重大度",AST,"件,文字列",静的解析ツールを使用し、特定の禁止命名や非推奨構文の使用を自動的に検出する。高・中・低,コーディング規約が必要,"表形式,違反箇所のハイライト"
192,2.1.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,定数名,定数名が命名規約に従っているかチェックする,"命名規約違反の定数名一覧,違反箇所,違反の種類",AST,"文字列,行番号",定数名のプレフィックスやサフィックス、文字ケースの使用を検証する,命名規約が必要,表形式
193,2.1.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,変数名,変数名が命名規約に従っているかチェックする。グローバル変数とローカル変数の命名区別を確認する,"命名規約違反の変数名一覧,違反箇所,違反の詳細",AST,"文字列,行番号",変数名の長さ、意味のある名称、アンダースコアやキャメルケースの使用などを検証する。具体的な命名規約の違反内容,命名規約が必要,表形式
194,2.1.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,関数名,関数名が命名規約に従っているかチェックする。関数の目的や処理内容と名前の適合性を解析する,"命名規約違反の関数名一覧,違反箇所,違反の詳細",AST,"文字列,行番号",関数名が動詞から始まるか、機能を明確に示しているかを評価する。命名規約のどの部分に違反しているか,命名規約が必要,表形式
195,2.1.5,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,パラグラフ名,パラグラフ名が命名規約に従っているかチェックする。パラグラフの階層構造やネーミングパターンを解析する,"命名規約違反のパラグラフ名一覧,違反箇所,違反の詳細",AST,"文字列,行番号",パラグラフ名が一貫性を持ち、処理内容を適切に表現しているかを評価する。具体的な問題点,命名規約が必要,表形式
196,2.1.6,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,ファイル名,ファイル名が命名規約に従っているかチェックする。物理ファイル名と論理ファイル名の対応関係を解析する,"命名規約違反のファイル名一覧,違反箇所,影響範囲",AST,"文字列,行番号",拡張子、接頭辞・接尾辞、用途別の命名規則を確認する。関連する処理やデータ,命名規約が必要,表形式
197,2.1.7,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,インデント・整形状況,コードのインデントやフォーマットが規約に則っているかを解析する,"インデント違反箇所数,違反箇所,違反の詳細",コードファイル,"件,行番号,文字列",ブロック構造や改行位置、スペースとタブの使用状況もチェックする。期待されるインデントと実際のインデントの差異,インデント規約が必要,テキスト記述
198,2.1.8,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コメント記述状況,コメント行数やコメント率を計算する。コメント内容が最新のコード状態と一致しているかを評価する,"コメント行数,コメント率,コメント不足箇所の一覧",コードファイル、AST,"行,%,行番号",重要な関数や処理ブロックにコメントがあるかを確認する,コメント率の目標値があれば比較可能,"グラフ(パイチャート,棒グラフ),表形式"
199,2.1.9,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,必須コメントの有無,必須とされるコメントが存在するかをチェックする,"不足しているコメント箇所,コメントの種類,合格している項目",AST,"行番号,文字列",ファイルヘッダーや関数の説明、変更履歴やライセンス情報の記載有無もチェックする。ファイルヘッダー、関数説明、変更履歴など,コメントに関するコーディング規約が必要,表形式
200,2.1.10,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コメントの質的評価,コメント内容がコードの理解に役立つか評価する。コードの変更に沿ってコメントが更新されているか確認する,"コメントの評価スコア,改善が必要なコメント,コメントの例",AST,"数値,行番号/文字列,文字列",コメントが具体的で明確か、曖昧な表現や不要なコメントがないかをチェックする。良質なコメントの例、不適切なコメントの例,コメント品質評価基準が必要,"テキスト記述,表形式"
201,2.1.11,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,標準化違反箇所,コーディング標準に違反している箇所を検出する。言語仕様の非推奨機能の使用や互換性の問題も検出する,"違反箇所数,違反内容,違反の重大度",AST,"件,文字列",変数のスコープ、例外処理の統一性、リソースの解放忘れなども解析する。気付きの程度度,コーディング標準が必要,表形式
202,2.2.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,デッドコード,到達不能なコードや使用されていないコードブロックを特定する。条件が常に真または偽になる箇所を特定する,"デッドコード箇所,デッドコードの総行数,デッドコードの理由",AST,"行番号,行,文字列",制御フロー解析を行い、どの経路からも実行されないコードを検出する。過去の仕様変更、未完成の実装など,,"表形式,ソースコードビューア"
203,2.2.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,未使用定数,定義されているが使用されていない定数を検出する,"未使用定数名,定義箇所,推奨される対応",AST,"文字列,行番号",定数の定義箇所と使用箇所を比較し、参照がないものを特定する。削除、使用方法の検討,コーディング規約があれば比較可能,表形式
204,2.2.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,未使用変数,定義されているが使用されていない変数を検出する,"未使用変数名,定義箇所,推奨される対応",AST,"文字列,行番号",変数のスコープ内での参照回数を解析し、未使用のものを特定する,コーディング規約があれば比較可能,表形式
205,2.2.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,未使用関数,定義されているが呼び出されていない関数を検出する,"未使用関数名,定義箇所,推奨される対応",AST,"文字列,行番号",関数のエントリポイントからの到達性を解析する。引数、戻り値、推奨される対応,コーディング規約があれば比較可能,表形式
206,2.2.5,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,重複コード,同一または類似のコードブロックを検出する,"重複コードの範囲,重複回数,重複コードの類似度",AST,"行番号,回,%",コードクローン検出ツールを使用し、一定の類似度を持つコードを特定する,コードの再利用性に関するガイドラインがあれば比較可能,"表形式,コード比較ビューア"
207,2.2.6,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,異常終了リスク箇所,エラーハンドリングが不十分な箇所を検出する,"リスク箇所,リスク内容,リスクの重大度",AST,"行番号,文字列",外部リソース操作後のエラーチェックを確認する。発生可能性,エラーハンドリングのガイドラインが必要,"表形式,リスク一覧"
208,2.2.7,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,GOTO文の使用状況,GOTO文の使用箇所と頻度を解析する,"GOTO文の使用回数,使用箇所,GOTO文のジャンプ先",AST,"回,行番号,文字列",GOTO文の代替手段(PERFORM文など)を提示する。影響範囲,コーディング規約でGOTO文の使用が禁止または制限されている場合比較が必要,"表形式,制御フロー図"
209,2.2.8,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,PERFORM文のネスト深度,PERFORM文のネストレベルを解析する,"最大ネスト深度,ネストが深い箇所,平均ネスト深度",AST,"レベル数,行番号,レベル数",ネスト深度の分布、深いネストがコードの理解や保守性に与える影響を評価する,ネスト深度の許容範囲が定められている場合比較が必要,"グラフ(ヒストグラム),表形式"
210,2.2.9,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,条件分岐の複雑性,条件分岐の数やネスト深度を解析する,"サイクロマティック複雑度,条件分岐の総数,複雑度が高い関数やパラグラフの一覧",AST,"数値,回,文字列",複雑度が高い箇所を特定し、コードの理解やテストの難易度を評価する,複雑度の許容範囲が定められている場合比較が必要,"グラフ(棒グラフ,複雑度分布図),表形式"
211,2.3.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,モジュール分割推奨箇所,大きすぎるモジュールや関数を特定する。単一責任の原則に基づき再設計を提案する,"対象モジュール名,分割推奨理由,分割される方法",AST,文字列,モジュールの意味が曖昧で複数の機能を持っている場合も検出する。大きすぎる、意味が多すぎるなど,モジュールサイズの基準があれば比較可能,"表形式,モジュール間の関係図"
212,2.3.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,ロジック最適化候補,非効率なアルゴリズムや冗長な処理を検出する。最適なアルゴリズムやデータ構造の使用例を提示する,"対象箇所,最適化提案内容,予想される性能向上効果",AST,"行番号,文字列",不要なループ、無駄なデータアクセス、非効率な条件分岐などを特定する,パフォーマンス基準やベストプラクティスが必要,"表形式,性能比較データ"
213,2.3.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,パフォーマンス改善ポイント,処理時間が長くなる可能性のある箇所を特定する,"改善ポイント,改善提案内容,予想される改善効果",AST,"行番号,文字列",リソース消費量の多い処理を特定する。具体的な対応,パフォーマンス要求があれば比較可能,"表形式,処理時間比較グラフ"
214,2.3.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,保守性向上施策,コードの可読性や保守性を向上させる提案を行う。テストカバレッジの向上やドキュメントの整備も含める,"対象箇所,提案内容,保守性向上による効果",AST,"行番号,文字列",複雑な条件式の簡素化、コメントの充実、変数名の改善などを提案する。エラー減少、開発効率向上など,保守性に関するガイドラインが必要,"テキスト記述,表形式"
215,2.3.5,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,共通化推奨処理,重複している処理を特定し、共通モジュール化を提案する,"重複処理箇所,共通化提案内容,共通化のメリット,共通化によるコード削減率",AST,"行番号,文字列,%",共通処理の抽出によりメンテナンス性向上、バグ修正の一元化などが期待できる,コードの再利用性に関するガイドラインが必要,"表形式,コード比較表"
216,3.1.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,総行数(LOC),ソースコード全体の行数をカウントする。各セクション毎の行数内訳を集計する,"総行数,セクション行数内訳",コードファイル、AST,行,各DIVISION、SECTION毎の行数を取得,,"テキスト記述,グラフ(棒グラフ),表形式"
217,3.1.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,実行行数,コメント行や空行を除いた実行行数をカウントする。COPY文やマクロの展開結果も考慮して算出する,"実行行数,実行行数の割合",AST,"行,%",ASTを利用して実行可能なコード要素を正確に抽出する,,"テキスト記述,グラフ"
218,3.1.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コメント行数,コメント行の数をカウントする。コメントの種類を解析する。コメント内容が最新のコード状態と一致しているかを評価する,"コメント行数,コメント率,コメント種類別行数",コードファイル,"行,%",ヘッダー、インライン、ブロックなどコメントの種類を分類,,"テキスト記述,グラフ"
219,3.2.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,サイクロマティック複雑度,プログラムの制御フローを解析する。エラーハンドリングの流れを組み込む,"サイクロマティック複雑度,フロー説明,処理ブロック詳細",AST,"数値,文字列",各パラグラフやセクションの関係性、制御構造を解析する,,グラフ(フローチャート)
220,3.2.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,制御フロー複雑度,条件分岐やループのネスト深度を解析する。ネストが深すぎる箇所を特定する,"最大ネスト深度,平均ネスト深度,ネスト深度分布",AST,"レベル数,レベル数,データ構造",ASTを利用してネスト構造を正確に追跡する,ネスト深度の許容範囲が定められている場合比較する,"テキスト記述,グラフ"
221,3.2.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,保守性指標,Halsteadメトリクス、Maintainability Indexを計算する。保守性の評価を行う,"Halsteadメトリクス,保守性スコア,保守性評価",AST,"数値,数値,文字列",演算子とオペランドの総数と種類を計算。複雑度、行数、コメント率などを組み合わせて算出。高い、平均、低い,,"グラフ(レーダーチャート),表形式"
222,3.3.1,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,コードカバレッジ,ステートメントカバレッジを計算する。各カバレッジ指標の詳細を計算する。未カバー箇所を特定する,"カバレッジ率,カバレッジ詳細値,未カバー箇所一覧",AST,"%,文字列,行番号",単体テストや総合テストの結果を用いてコードの実行カバレッジを計算する。ステートメント、ブランチ、パスカバレッジなど,カバレッジ率の目標値があれば比較する,"グラフ(棒グラフ,パイチャート),コードカバレッジマップ"
223,3.3.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,重複コード率,コードの類似性を解析する。重複箇所を特定する。重複コードの類似度を評価する,"重複コード率,重複箇所数,重複コードの種類",AST,"%,件,文字列",コードクローン検出ツールを使用し、類似度の高いコードブロックを特定する。完全一致、部分一致,重複コード率の許容範囲があれば比較する,グラフ(棒グラフ)
224,3.3.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,変更頻度,バージョン管理システムの履歴を解析する。変更の種類を分類する。変更理由を解析する,"変更回数,変更が多い箇所,変更理由の分析",コードファイル,"回,行番号,文字列",変更の種類を分類する。バグ修正、機能追加、リファクタリング,,"グラフ(ヒートマップ),変更履歴のタイムライン表示"
225,4.1.1,ドキュメント,単一,"セキュリティ・脆弱性関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,SQLインジェクション,ユーザー入力が直接SQL文に組み込まれていないかをチェックする。入力データのバリデーションやエスケープ処理が適切かを解析する,"危険な箇所数,該当行番号,問題のあるコードスニペット",AST,"件,行番号,文字列",パラメータ化クエリやプリペアドステートメントの使用状況を確認する,セキュアコーディング規約が必要,表形式
226,4.1.2,ドキュメント,単一,セキュリティ・脆弱性関連,,バッファオーバーフロー,データの受け渡しでサイズチェックを確認する。配列や文字列操作での境界チェックを解析する,"危険な箇所数,該当行番号,問題のあるコードスニペット",AST,"件,行番号,文字列",配列や文字列操作で境界チェックが適切に行われているかを解析する。メモリ操作時の不正なアクセスやデータ破損のリスクを検出する,セキュリティガイドラインが必要,"表形式,深刻度別の分類"
227,4.1.3,ドキュメント,単一,セキュリティ・脆弱性関連,,ハードコードされた認証情報,パスワードや秘密鍵などがソースコード内にハードコードされていないかを検出する。コメントやデバッグコード内の機密情報も確認する,"認証情報の数,該当行番号,検出情報の種類",AST,"件,行番号,文字列",正規表現や機械学習を用いて、パターンに一致する情報を抽出する。パスワード、APIキーなど,セキュリティポリシーが必要,表形式
228,4.1.4,ドキュメント,単一,"セキュリティ・脆弱性関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,安全でないファイル操作,ファイル操作時のエラーチェックやアクセス制御を確認する。ファイルの権限設定や暗号化の有無をチェックする,"リスク箇所数,該当行番号,問題のあるコードスニペット",AST,"件,行番号,文字列",ファイルパスのバリデーションやサニタイズが適切かを解析する,セキュリティガイドラインが必要,表形式
229,4.1.5,ドキュメント,単一,"セキュリティ・脆弱性関連
外部連携・システム依存・JCL・プラットフォーム関連",,コマンドインジェクション,外部コマンド呼び出しにユーザー入力が含まれていないかをチェックする。安全なコマンド実行方法を検討する,"危険な箇所数,該当行番号,危険性の詳細",AST,"件,行番号,文字列",シェルメタ文字の適切なエスケープ処理が行われているかを解析する。危険性の詳細と想定シナリオ,セキュリティガイドラインが必要,表形式
230,4.2.1,ドキュメント,単一,セキュリティ・脆弱性関連,,CVEデータベース連携,使用ライブラリやモジュールの脆弱性をチェックする。特定の名前や機能を解析する,"該当するCVE番号,該当プログラム数,使用機能や名前一覧",AST,"文字列,件",ライブラリのバージョン情報を取得し、最新のCVEデータベースと照合する,最新のCVEデータベースが必要,"表形式,CVE詳細へのリンク"
231,4.2.2,ドキュメント,単一,セキュリティ・脆弱性関連,,脆弱性スコアリング,検出された脆弱性のCVSSスコアを計算する。組織の環境要因や資産価値を考慮したスコアリングを実施する,"CVSSスコア,深刻度,評価詳細",AST,"数値,文字列",CVSS v3.1のベーススコア、時間的スコア、環境スコアを算出する,CVSSの評価基準が必要,"グラフ(棒グラフ),スコア分布図"
232,4.2.3,ドキュメント,単一,セキュリティ・脆弱性関連,,推奨対策提示,検出された脆弱性への対策を提示する。修正の優先度や影響範囲を評価する,"推奨される対策内容,対策の実施手順,予想される対策効果",AST,文字列,セキュリティアドバイザリやベンダー情報を参照する,セキュリティガイドラインが必要,"テキスト記述,表形式"
233,5.1.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,SQL文の種類と頻度,埋め込みSQLを解析する。SQL文の複雑さを解析する,"SQL文の種類,使用回数,SQL文の平均行数",AST,"文字列,回,行",SELECT、INSERT、UPDATE、DELETEなどの種類と頻度を集計する,データベースアクセスのガイドラインが必要,"表形式,グラフ"
234,5.1.2,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,カーソル宣言,カーソルの宣言と使用箇所を解析する。カーソルの属性や使用頻度を評価する,"カーソル名,使用箇所,カーソル関連処理",AST,"文字列,行番号",カーソルのタイプや性質を特定する。オープン・フェッチ・クローズ処理の有無,カーソルの使用基準が必要,"表形式,フローチャート"
235,5.1.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,テーブル参照環境,参照しているテーブルの一覧を取得する。各テーブルへの操作を解析する,"データベース名/テーブル名,アクセス種別,操作の頻度",AST,"文字列,回",テーブル間の関係性も考慮する。読み取り/書き込み,データベースアクセスのガイドラインが必要,"表形式,ER図"
236,5.1.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,結合複雑度,SQL文の中でのテーブル結合を解析する。結合の種類や条件を解析する,"結合数,結合の種類,複雑な結合",AST,"件,文字列",結合条件の適切性を検証する。INNER JOIN、LEFT JOINなど。3テーブル以上,結合の複雑度に関するパフォーマンス基準が必要,"グラフ,SQL構造図"
237,5.2.1.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,DB2,DB2に関連するSQL文やAPIの使用を検出する。DB2固有機能を解析する,"DB2の使用有無,使用箇所,DB2固有機能一覧",AST,"文字列,行番号",特定のDB2拡張機能の使用状況も解析する,データベース統一の方針が必要,"テキスト記述,表形式"
238,5.2.1.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,VSAM,VSAMファイルのアクセス命令を検出する。ファイルの組織とアクセスモードを解析する,"VSAMの使用有無,使用箇所,VSAM特有の処理",AST,"文字列,行番号",ファイル組織とアクセスモードを解析する。リカバリ、ロック制御など,ストレージの標準化方針が必要,"テキスト記述,表形式"
239,5.2.1.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,IMS DB,IMS DBに関連するコマンドを検出する。DL/I呼び出しを解析する,"IMS DBの使用有無,使用箇所,セグメント名",AST,"文字列,行番号",データベース階層構造のアクセスパターンを解析する,データベース統一の方針が必要,"テキスト記述,表形式"
240,5.2.1.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,Oracle,Oracle固有のSQL構文や機能を検出する。PL/SQLブロックの有無を確認する,"Oracleの使用有無,使用箇所,Oracle固有機能一覧",AST,"文字列,行番号",PL/SQLブロックの有無、Oracle特有のデータ型や関数の使用状況を解析する,データベース統一の方針が必要,"テキスト記述,表形式"
241,5.2.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",データベースアクセス・テーブル関連,アクセスパターン分析,アクセス方法や頻度を解析する。アクセス頻度の高いテーブルを特定する,"アクセスパターン,アクセス回数,アクセスパターン別割合",AST,"文字列,回,%",シーケンシャル、ランダム、インデックス使用など,パフォーマンス基準が必要,"グラフ,表形式"
242,5.2.3,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,トランザクション境界,トランザクションの開始・終了箇所を検出する。コミット、ロールバックのタイミングを解析する,"トランザクション数,トランザクション範囲,トランザクション内の操作",AST,"件,行番号,データ構造",エラーハンドリングや再試行処理の有無を確認する。操作種類と回数,トランザクション管理のガイドラインが必要,"テキスト記述,表形式"
243,5.2.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,データベースアクセス・テーブル関連,コネクション管理,データベース接続の確立・切断方法を解析する。接続エラー時の処理や接続の再利用状況を確認する,"コネクション数,管理方法,コネクションの平均生存時間",AST,"件,文字列,時間",コネクションプーリングの有無や接続の再利用状況を確認する。都度接続、プール利用など,コネクション管理のベストプラクティスが必要,表形式
244,6.1.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面制御方式,画面制御の方式を特定する。画面制御関連の命名やAPIを解析する,"画面制御方式,使用箇所,各方式の使用割合",AST,"文字列,行番号",CICS、BMS、SCREEN SECTIONなどの使用を解析する,画面制御の標準が必要,"テキスト記述,表形式,グラフ"
245,6.1.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面セクション構造,SCREEN SECTIONの定義を解析する。レイアウト情報を解析する。フィールド属性を解析する,"画面項目名,レイアウト情報,フィールド属性",AST,文字列,フィールド属性や検証ルールも解析する,画面設計のガイドラインが必要,"表形式,グラフ(画面レイアウト図)"
246,6.1.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,端末I/O,ACCEPT、DISPLAYなどの端末入出力命令を解析する。入出力データ項目を解析する,"端末I/O命令の使用回数,使用箇所,入出力データ項目",AST,"回,行番号,文字列",入出力のタイミングや頻度を特定する,端末I/Oの使用制限やガイドラインが必要,表形式
247,6.1.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面マップ,画面項目とその配置を解析する。画面項目の詳細を解析する。画面遷移を解析する,"画面マップ,データ項目のフロー,画面間の遷移フロー",AST,"図,データ構造",ユーザー操作シーケンスも分析する。データ型、制御属性,画面デザインの標準が必要,"グラフ(画面マップ図),インタラクティブプロトタイプ"
248,6.1.5,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,対話パターン,ユーザーとの対話パターンを解析する。イベントハンドリングを解析する。入力データの検証を解析する,"対話パターンの種類,イベントハンドリング内容,入力検証ルール",AST,文字列,入力→確認→処理など。エラーメッセージ、確認メッセージ。制約条件,UI/UXのガイドラインが必要,"グラフ,表形式"
249,6.2.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連",,バッチ構造,バッチ処理の全体構成を解析する。実行順を解析する。データフローを解析する,"処理ステップ,実行順,データフロー",AST,"文字列,データ構造",ジョブのステップ構成や依存関係、実行条件を解析する。各ステップの入力・出力データ,バッチ処理の標準が必要,"グラフ(フローチャート),ガントチャート"
250,6.2.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,ファイル処理,ファイルの読み書き操作を解析する。アクセスモードを解析する。エラーハンドリングを解析する,"ファイル名,アクセスモード,エラー処理内容",AST,文字列,ファイルの組織形態やレコード長を特定する。READ、WRITE、UPDATE。ファイルのロック制御,ファイル操作のガイドラインが必要,"表形式,データフロー図"
251,6.2.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連",,ソート/マージ,SORT文やMERGE文の使用状況を解析する。使用箇所とキーを解析する。ソートアルゴリズムの選択やメモリ使用量を評価する,"ソート/マージの回数,使用箇所,ソートキー項目",AST,"回,行番号,文字列",ソートキーの指定(昇順/降順)。ソートアルゴリズムの選択やメモリ使用量を評価する,パフォーマンス基準が必要,"表形式,処理時間グラフ"
252,6.2.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
バッチ処理・ソート関連",,チェックポイント,チェックポイントやリスタート処理を解析する。チェックポイントの設置基準や頻度を評価する。リスタート可能なステップを特定する,"チェックポイントの数,設定箇所,チェックポイント間の処理",AST,"件,行番号,文字列",異常終了時のリカバリ手順やデータ整合性の確保方法を確認する,バッチ処理の信頼性向上のためのガイドラインが必要,フローチャート
253,6.3.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,データの受け渡し方法,アセンブラとのインターフェースを解析する。データのエンディアンやアラインメントを解析する,"データ受け渡しの方法,該当箇所,受け渡しデータ仕様",AST,"文字列,行番号,データ構造",レジスタ、メモリ領域、スタックなどを解析する。型とサイズ,インターフェース仕様が必要,"テキスト記述,表形式,フローチャート"
254,6.3.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,呼び出し規約,プログラム間の呼び出し規約を解析する。関数間の引数の受け渡し方法を解析する,"呼び出し規約の種類,該当箇所,引数と戻り値の詳細",AST,"文字列,行番号,データ構造",スタック使用、レジスタ使用など。合致と型,システムの呼び出し規約が必要,"テキスト記述,コールグラフ"
255,6.3.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,データ型,アセンブラで使用されているデータ型を解析する。データ型のサイズと釣値を解析する。COBOL側との互換性を確認する,"データ型の種類,使用箇所,データ型の使用目的",AST,"文字列,行番号",BYTE、WORD、DWORDなど,データ型の統一基準が必要,"表形式,データ型マッピング表"
256,6.3.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,データ構造,アセンブラのデータ構造を解析する。パディングやアラインメントを解析する。COBOLとの対応を確認する,"データ構造名,構成要素,COBOL対応表",AST,"文字列,データ構造",構造体や共用体のフィールド情報、オフセットを特定する,データ構造の設計基準が必要,"表形式,メモリレイアウト図"
257,6.3.5,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,プログラムの流れ,制御フローを解析する。分岐命令やループ構造を特定する。例外処理を解析する,"フローチャート,主要処理ブロック,クリティカルセクション",AST,"図,文字列",制御フローを解析する。分岐命令やループ構造を特定する,,"グラフ(フローチャート),制御フローグラフ"
258,6.3.6,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,エラー処理,エラーハンドリング部分を解析する。ログ出力や通知機能を解析する。エラーの種類と対応を解析する,"エラー処理の方法,該当箇所,エラー発生条件",AST,"文字列,行番号",エラーコードの設定、例外発生時の挙動を特定する,エラーハンドリングのガイドラインが必要,"テキスト記述,表形式"
259,6.3.7,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,最適化検討,パフォーマンスを解析する。名令レベルの最適化を評価する。パイプライン効率を評価する,"最適化可能な箇所,提案内容,性能向上率",AST,"行番号,文字列,%",ボトルネックとなる命令やループを特定する。命令置換、ループアンローリングなど,パフォーマンス基準が必要,"テキスト記述,表形式"
260,6.3.8,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,コードの理解難易度,アセンブラコードの複雑さを評価する。難解な箇所を特定する。改善提案を作成する,"理解難易度スコア,難解な箇所,複雑度の詳細説明",AST,"数値,行番号,文字列",サイクロマティック複雑度やネストの深さを計算する,理解難易度の評価基準が必要,"グラフ(レーダーチャート),ヒートマップ"
261,6.3.9,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,コメントのドキュメンテーション,コメントの量と質を解析する。不足しているドキュメントを特定する。コメントの種類を解析する,"コメント行数,コメント率,コメントの種類",コードファイル,"行,%,文字列",コメントとコードの一致性や有用性を評価する。ヘッダー、インライン、ブロック,コメントのガイドラインが必要,"テキスト記述,表形式"
262,6.3.10,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連
データフロー・データ構造・DB関連",,プラットフォーム依存性,プラットフォーム固有の命令や機能を特定する。移植性に影響を与える要素を評価する。代替手段を検討する,"依存箇所,依存内容,代替手段",AST,"行番号,文字列",ハードウェア依存の最適化や特殊なI/O操作を検出する,移植性に関するガイドラインが必要,"表形式,リスク評価表"
263,6.3.11,ドキュメント,単一,セキュリティ・脆弱性関連,,脆弱性の検出,セキュリティ上の脆弱性を検出する。セキュリティベストプラクティスとの比較を行う,"脆弱な箇所,脆弱性の種類,対応内容",AST,"行番号,文字列",バッファオーバーフロー、メモリリーク、未初期化変数などを特定する,セキュリティ基準が必要,"表形式,深刻度別の分類"
264,6.3.12,ドキュメント,単一,セキュリティ・脆弱性関連,,セキュアコーディングの合否,セキュアコーディングガイドラインへの準拠を確認する。既知の脆弱性パターンを確認する,"違反箇所数,違反内容,修正提案",AST,"件,文字列",安全なメモリ管理、入力検証、エラーハンドリングなどを評価する。具体的なガイドライン違反事項,セキュアコーディングガイドラインが必要,"表形式,優先度別リスト"
265,7.1.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,HITACHI,HITACHI固有のCOBOL拡張機能や方言を検出する。標準COBOLとの互換性を評価する,"HITACHI方言の使用箇所数,該当プログラム数,使用機能や名前一覧",AST,"件,文字列",特定の命令や機能を解析する,標準COBOLへの準拠度を評価するための基準が必要,"表形式,影響度別の分類"
266,7.1.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,FUJITSU,FUJITSU固有の拡張機能や方言を検出する。他のCOBOLコンパイラとの互換性を評価する,"FUJITSU方言の使用箇所数,該当プログラム数,方言機能の一覧",AST,"件,文字列",特定のプリプロセッサ指示や組み込み関数を解析する,標準COBOLへの準拠度を評価するための基準が必要,"表形式,影響度別の分類"
267,7.1.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,IBM,IBM固有の拡張機能や方言を検出する。標準化への影響を評価する,"IBM方言の使用箇所数,該当プログラム数,IBM固有機能の詳細",AST,"件,文字列",特有のオプションや命名、データ型を解析する,標準COBOLへの準拠度を評価するための基準が必要,"表形式,影響度別の分類"
268,7.1.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,NEC,NEC固有の拡張機能や方言を検出する。標準COBOLとの互換性を評価する。代替実装を提案する,"NEC方言の使用箇所数,該当プログラム数,方言機能の一覧",AST,"件,文字列",独自のデータ型や制御構文を解析する,標準COBOLへの準拠度を評価するための基準が必要,"表形式,影響度別の分類"
269,7.1.5,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
外部連携・システム依存・JCL・プラットフォーム関連",,UNISYS,UNISYS固有の拡張機能や方言を検出する。他システムへの移行影響を評価する。移行リスクを評価する,"UNISYS方言の使用箇所数,該当プログラム数,使用機能の詳細と代替手段",AST,"件,文字列",特定のシステム関数やファイル制御機能を解析する,標準COBOLへの準拠度を評価するための基準が必要,"表形式,影響度別の分類"
270,7.2.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,EBCDIC,EBCDIC文字コードを使用している箇所を検出する。データ変換処理や文字コード依存のロジックを解析する,"EBCDIC使用箇所数,該当プログラム数,変換処理の有無",AST,"件,文字列",外部システムとのデータ授受部分も確認する,文字コード統一の方針が必要,"表形式,影響度マトリクス"
271,7.2.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,JEF,JEF文字コードを使用している箇所を検出する。JEF特有の文字の使用状況を特定する,"JEF使用箇所数,該当プログラム数,変換処理の詳細",AST,"件,文字列",文字列リテラルやデータ項目のエンコーディングを解析する。機種依存文字、拡張漢字など,文字コード統一の方針が必要,"表形式,影響度マトリクス"
272,7.2.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,KEIS,KEIS文字コードを使用している箇所を検出する。KEIS特有の制御コードや拡張文字を特定する,"KEIS使用箇所数,該当プログラム数,変換処理の詳細",AST,"件,文字列",データ定義部や入出力処理でのKEISコード使用を解析する,文字コード統一の方針が必要,"表形式,ヒートマップ"
273,7.2.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,ASCII,ASCII文字コードを使用している箇所を検出する。非ASCII文字との共存を特定する,"ASCII使用箇所数,該当プログラム数,変換処理の詳細",AST,"件,文字列",7ビットASCIIと拡張ASCIIの使用状況を確認する。日本語など,文字コード統一の方針が必要,"表形式,グラフ"
274,7.2.5,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,Shift-JIS,Shift-JIS文字コードを使用している箇所を検出する。機種依存文字やサロゲートペアの使用を特定する,"Shift-JIS使用箇所数,該当プログラム数,変換処理の詳細",AST,"件,文字列",データ項目、入出力処理、ファイル操作での使用を解析する,文字コード統一の方針が必要,"表形式,グラフ"
275,7.3.1,ドキュメント,単一,COBOL言語構造特有の解析項目,,特殊構文,標準COBOLに含まれない特殊な構文を検出する。プログラム全体の非標準的な文法要素を特定する,"特殊構文の種類,使用箇所,特殊構文の詳細",AST,"文字列,行番号",各メーカー固有の拡張構文やオプションを解析する,標準COBOLへの準拠度が必要,"表形式,影響度評価"
276,7.3.2,ドキュメント,単一,COBOL言語構造特有の解析項目,,特殊コマンドの使用状況,メーカー固有の特殊コマンドを検出する。特殊コマンドの機能と効果を調査する,"特殊コマンド名,使用箇所数,各コマンドの使用目的",AST,"文字列,件",プリプロセッサ指示、コンパイラディレクティブ、独自の制御文を解析する,標準COBOLへの統一方針が必要,"表形式,影響度リスト"
277,7.3.3,ドキュメント,単一,COBOL言語構造特有の解析項目,,特殊関数の使用状況,メーカー固有の特殊関数を検出する。関数の引数や戻り値の型を解析する,"特殊関数名,使用箇所数,各関数の詳細説明",AST,"文字列,件",独自に追加された組み込み関数やライブラリ関数を解析する,標準COBOLへの統一方針が必要,"表形式,代替手段リスト"
278,7.3.4,ドキュメント,単一,コード品質・保守性・最適化・規約順守関連,,キーワード使用頻度の統計,キーワードの使用頻度を集計する。標準と非標準の割合を分析する,"キーワード別使用回数,キーワード種別割合,頻出キーワード一覧",AST,"件,%,文字列",標準キーワードと非標準キーワードを分類する,標準キーワードへの統一方針が必要,"グラフ(使用頻度),表形式"
279,7.3.5,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
データフロー・データ構造・DB関連",ファイル・レコード・フォーマット関連,ファイルシステム種別の分布,使用されているファイルシステムを解析する。各ファイルシステムの使用状況を解析する,"ファイルシステム種別,使用プログラム数,ファイルアクセス詳細",AST,"文字列,件",VSAM、QSAM、ISAMなどを解析する,ファイルシステム統一の方針が必要,"グラフ(分布),表形式"
280,7.3.6,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,画面制御方式の統計,メーカー固有の画面制御方式を検出する。各画面制御方式の特徴を解析する,"画面制御方式名,使用プログラム数,各方式の使用割合",AST,"文字列,件,%",FJSCREEN、HITACHI VOS3など,標準的な画面制御方式への移行ガイドラインが必要,"表形式,グラフ"
281,8.1,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,Mermaid記法によるフローチャート,プログラムの制御フローを解析する。エラーハンドリングの流れを組み込む。複雑度の高い部分を強調する,"フローチャート,フロー説明,処理ブロック詳細",AST,"図,文字列",各パラグラフやセクションの関係性、制御構造を解析する,,グラフ(フローチャート)
282,8.2,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,Mermaid記法によるシーケンス図,モジュール間の呼び出し関係を解析する。同期/非同期の情報を組み込む。データの流れを明示する,"シーケンス図,メソッド名,データフロー",AST,"図,文字列",外部システムやデータベースとのインタラクションも含む,,グラフ(シーケンス図)
283,8.3,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,データフロー図,データの流れを解析する。データストアとの関係も含める。データのライフサイクルを解析する,"データフロー図,データ項目フロー,ライフサイクル情報",AST,"図,データ構造,文字列",データの生成、変換、消費のプロセスを解析する,,グラフ(DFD)
284,8.4,ドキュメント,単一,"コード品質・保守性・最適化・規約順守関連
可視化・UI・フォーム・画面関連",,システム構成図,システム全体の構成を解析する。依存関係やデータフローを組み込む。物理構成と論理構成を解析する,"システム構成図,コンポーネント情報,構成詳細図",AST,"図,文字列,図",ハードウェア、ネットワーク、ソフトウェアコンポーネントの関係を特定する,システムアーキテクチャの標準が必要,グラフ(システム構成図)
285,1.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,プログラム名・目的の特定,複数のソースコードのIDENTIFICATION DIVISIONからPROGRAM-IDを抽出し各プログラム名を特定する。AUTHOR/INSTALLATION/DATE-WRITTENなどの項目やコメント・メタデータから各プログラムの目的を解析する。各プログラム内のコメントやドキュメント化されたセクションを解析し全体的な機能やビジネスロジックを明確化する,プログラムID・プログラム目的・概要説明・主要機能一覧,対象ソース解析結果・対象ソースコード・対象AST,文字列,複数プログラムの目的と機能を横断的に把握し関連性を分析する,不要,テキスト記述・表形式（プログラム一覧表）
286,1.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,プログラム基本構造,複数のプログラムのDIVISION/SECTION/PARAGRAPHの構造を解析し階層的なプログラム構造を把握する。ASTを用いて各構造間の関係性や制御フローを解析する。モジュール化や再利用性の観点から構造を評価する,プログラム構造ツリー・制御フロー・データフロー,対象ソース解析結果・対象AST,データ構造・文字列・図,プログラム間の構造の類似性や相違点を分析する,コーディング標準,グラフ（ツリー図・フローチャート）・図表（データフロー図）
287,1.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,更新履歴,各ソースコード内のコメントから更新履歴情報を抽出する。バージョン管理システムのメタデータを解析し詳細な変更履歴を取得する。複数プログラム間の変更頻度や共通の変更点を分析する,更新履歴一覧・コミットメッセージ・変更ファイル一覧・変更頻度の高いプログラムやセクション,対象ソースコード・バージョン管理システム,日時・文字列,プログラム間の変更傾向や相関を分析する,更新履歴の記載フォーマット,表形式（更新履歴一覧）・グラフ（変更頻度ヒートマップ）
288,1.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,行数統計,総行数・コード行数・コメント行数・空行数を各プログラムごとにカウントする。コメント率や空行率を計算する。各DIVISIONやSECTIONごとの行数も集計し全体的な傾向を分析する,総行数・コード行数・コメント行数・空行数・コメント率・各DIVISIONの行数と割合,対象ソースコード・対象AST,行・パーセント,プログラム間の規模や品質指標を比較分析する,コメント率の目標値,グラフ（パイチャート・棒グラフ）・表形式（プログラム別行数統計）
289,1.1.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,DIVISION毎の構成比,各プログラムのDIVISIONの行数をカウントし全体に対する割合を計算する。DATA DIVISION内の各SECTIONの行数も解析する。プログラム間での構成比を比較し全体的な特徴を把握する,各DIVISIONの行数・構成比・各SECTIONの行数と構成比,対象ソースコード・対象AST,行・パーセント,プログラム間の構造バランスを評価する,不要,グラフ（パイチャート・棒グラフ）・表形式（構成比一覧）
290,1.2.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,コーディング規約準拠性チェック,コーディング規約に基づき命名規則・インデント・コメントの有無・コードの整形などをチェックする。静的解析ツールを使用して自動的に違反箇所を検出する。プログラム全体の遵守率を算出する,規約違反の総件数・違反の詳細・違反の重大度・プログラム別違反件数,対象ソース解析結果・対象ソースコード,件数・文字列・重大度（高中低）,プログラム間のコーディング品質を比較評価する,コーディング規約,表形式（違反一覧）・グラフ（違反件数推移・プログラム別件数）
291,1.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ただし主な問題点が規約違反や品質問題のため品質側,問題箇所のハイライト,規約違反や潜在的なバグとなるコード箇所を特定しハイライトする。ASTを用いて深いネストや複雑な条件式などの可読性を損なう要素を検出する。複数プログラム間で共通する問題点を集計する,問題箇所の行番号・問題内容の説明・問題の種類・プログラム別問題件数,対象ソース解析結果・対象AST,数値・文字列・種別,プログラム間の共通の問題点を特定する,コーディング規約・ベストプラクティス,テキスト記述・ソースコードビューア（ハイライト表示）
292,1.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,リファクタリング推奨箇所,コードの複雑度や冗長性を解析し改善が必要な箇所を特定する。重複コードや長すぎるメソッド・グローバル変数の過度な使用などを検出する。複数プログラム間で共通するリファクタリングの機会を発見する,リファクタリング推奨箇所・改善提案内容・改善による予想効果,対象ソース解析結果・対象AST,行番号・文字列・効果予測,プログラム間の共通の改善ポイントを特定する,コーディング標準・リファクタリングガイドライン,表形式（リファクタリング提案一覧）・優先度別リスト
293,1.3.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,コマンド参照解析,使用されているCOBOLのコマンドとその参照関係を解析する。特に重要なコマンド（ファイル操作・データベースアクセス・通信処理など）の使用状況を詳細に解析する。プログラム間でのコマンド使用の一貫性を評価する,コマンド名・参照回数・コマンドの使用箇所・影響範囲・プログラム別使用頻度,対象ソース解析結果・対象AST,文字列・回数・行番号,プログラム間のコマンド使用パターンを分析する,使用禁止コマンドリスト,グラフ（コールグラフ）・表形式（コマンド使用一覧）
294,1.3.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,関数参照解析,自作関数や外部関数の呼び出し関係を解析する。関数の入出力・引数のデータ型・戻り値なども解析する。関数の再利用性やプログラム間での共通利用状況を評価する,関数名・呼び出し元・呼び出し先・呼び出し回数・関数の役割・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・回数,プログラム間の関数共有状況を分析する,関数使用基準,グラフ（コールグラフ）・表形式（関数使用一覧）
295,1.3.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,定数参照解析,定数の定義と使用箇所を解析する。定数が適切に再利用されているか・マジックナンバーが使われていないかを確認する。プログラム間での定数の統一性を評価する,定数名・使用箇所・定数の値・使用頻度・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・回数,プログラム間の定数定義の一貫性を評価する,定数命名規則,表形式（定数使用一覧）・グラフ（定数使用頻度棒グラフ）
296,1.3.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,変数参照解析,変数の宣言と参照関係を解析する。変数のスコープ・データ型・初期化の有無・使用されていない変数を検出する。プログラム間での変数名の統一性やスコープの適切性を評価する,変数名・参照回数・宣言箇所・スコープ・未使用変数一覧・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・回数・行番号,プログラム間の変数命名規則の統一性を評価する,変数命名規則・スコープ使用方針,表形式（変数使用一覧）・グラフ（未使用変数割合）
297,1.3.1.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,ポインタ参照解析,ポインタの使用状況と参照関係を解析する。ポインタの初期化・解放処理・NULLチェックの有無を検証する。プログラム間でのポインタ使用の一貫性を評価する,ポインタ名・使用箇所・ポインタの安全性・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・評価結果,プログラム間のポインタ使用パターンを分析する,ポインタ使用ガイドライン,表形式（ポインタ使用一覧）・警告箇所ハイライト
298,1.3.1.6,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,GOTO文、エラーハンドリングなどコード品質関連,その他参照解析,上記以外の要素（GOTO文・エラーハンドリング構造など）の参照関係を解析する。制御構造の複雑さや例外処理の適切性を評価する。プログラム間でのコーディングパターンの統一性を確認する,要素名・参照関係・潜在的問題点・プログラム別問題箇所数,対象ソース解析結果・対象AST,文字列・行番号・件数,プログラム間の共通パターンを特定する,不要,グラフ（制御フロー図）・表形式（問題箇所一覧）
299,1.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,再利用性、標準化分析,COPY文使用状況解析,COPY文を全て抽出しその使用ファイルやセクションを解析する。COPYされたコードの内容や依存関係を解析し再利用性やモジュール性を評価する。プログラム間で共通して使用されているCOPYファイルを特定する,COPYファイル名・使用箇所・COPYファイルの内容概要・使用頻度・プログラム別利用状況,対象ソース解析結果・対象ソースコード,文字列・行番号・回数,プログラム間のCOPYファイル共有状況を分析する,共通部品使用基準,表形式（COPY文使用一覧）・依存関係図
300,1.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,外部連携評価は品質・保守性側,外部プログラム呼出/参照解析,CALL文や外部からのCALLを解析し外部プログラムとの関係性を特定する。呼び出し時のパラメータや戻り値の型・呼び出し条件などを詳細に解析する。プログラム間の相互依存関係を評価する,外部プログラム名・呼び出し方向・呼び出し回数・パラメータ情報・依存度の高いプログラム,対象ソース解析結果・対象AST,文字列・回数・パラメータ情報,プログラム間の依存関係を分析する,外部インターフェース仕様書,表形式（外部プログラム呼び出し一覧）・グラフ（依存関係図）
301,1.3.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,共通モジュール使用状況解析,共通モジュールの使用状況を解析する。共通モジュールのバージョン・依存関係・更新頻度などを調査する。プログラム間での共通モジュールの利用パターンを分析する,モジュール名・使用回数・モジュールの機能概要・バージョン情報・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・回数,プログラム間の共通モジュール利用状況を評価する,共通モジュール利用ガイドライン,表形式（共通モジュール使用一覧）・グラフ（使用頻度棒グラフ）
302,2.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,命令規則違反分析,複数のソースコードを対象に規約違反命令や構文を検出する。静的解析ツールで禁止命令や非推奨構文の使用を検出する。ASTを用いて構文レベルでの規約違反を解析する。プログラム間の違反傾向を分析する,規約違反箇所総数・違反内容の詳細・プログラム別違反件数・違反種類別統計・重大度評価,対象ソース解析結果・対象AST・対象ソースコード,件数・行番号・重大度（高中低）,プログラム間の規約遵守状況を比較評価する,コーディング規約,表形式（違反一覧・詳細）・違反箇所ハイライト・グラフ（違反分布）
303,2.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,定数名規則チェック,定数名が命名規則に従っているかチェックする。プレフィックスやサフィックス・文字ケースの使用を検証する。定数のスコープや定義場所も解析する。全体の命名規則違反傾向を分析する,命名規則違反の定数名一覧・違反箇所・違反種類・プログラム別違反件数・違反率,対象ソース解析結果・対象AST,文字列・行番号・件数・パーセント,プログラム間の命名規則統一性を評価する,命名規則,表形式（違反定数名一覧）・グラフ（違反統計・比較）
304,2.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,変数名規則チェック,変数名が命名規則に従っているかチェックする。変数名の長さ・意味・アンダースコア使用などを検証する。グローバル変数とローカル変数の命名区別を確認する。プログラム間の一貫性を評価する,命名規則違反の変数名一覧・違反箇所・違反詳細・プログラム別違反件数・違反率,対象ソース解析結果・対象AST,文字列・行番号・件数・パーセント,プログラム間の変数命名規則遵守状況を評価する,命名規則,表形式（違反変数名一覧）・グラフ（違反統計・比較）
305,2.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,関数名規則チェック,関数名が命名規則に従っているかチェックする。動詞始まりや機能明示を評価する。関数の目的や処理内容と名前の適合性を解析する。プログラム間の命名パターンを分析する,命名規則違反の関数名一覧・違反箇所・違反詳細・プログラム別違反件数・違反率,対象ソース解析結果・対象AST,文字列・行番号・件数・パーセント,プログラム間の関数命名規則遵守状況を評価する,命名規則,表形式（違反関数名一覧）・グラフ（違反統計・比較）
306,2.1.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,パラグラフ名規則チェック,パラグラフ名が命名規則に従っているかチェックする。処理内容の適切な表現を評価する。パラグラフの階層構造やネーミングパターンを解析する。プログラム間の命名統一性を分析する,命名規則違反のパラグラフ名一覧・違反箇所・違反詳細・プログラム別違反件数・違反率,対象ソース解析結果・対象AST,文字列・行番号・件数・パーセント,プログラム間のパラグラフ命名規則遵守状況を評価する,命名規則,表形式（違反パラグラフ名一覧）・グラフ（違反統計・比較）
307,2.1.6,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,ファイル名規則チェック,ファイル名が命名規則に従っているかチェックする。拡張子・接頭辞・接尾辞・用途別命名規則を確認する。物理/論理ファイル名の対応関係を解析する。システム全体の一貫性を評価する,命名規則違反のファイル名一覧・違反箇所・影響範囲・プログラム別違反件数・違反率,対象ソース解析結果・対象ソースコード,文字列・行番号・件数・パーセント,プログラム間のファイル命名規則遵守状況を評価する,命名規則,表形式（違反ファイル名一覧）・グラフ（違反統計・比較）
308,2.1.7,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,インデント・整形状況チェック,コードのインデントやフォーマットが規約に沿っているか解析する。自動整形ツールで違反箇所を検出する。ブロック構造や改行位置・スペース/タブ使用を確認する。プログラム全体の整形遵守率を評価する,インデント違反箇所総数・違反箇所・違反詳細・プログラム別違反件数・違反率,対象ソース解析結果・対象ソースコード,件数・行番号・パーセント,プログラム間のコード整形状況を比較評価する,インデント規約,テキスト記述・違反箇所スニペット・グラフ（違反統計）
309,2.1.8,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,コメント記述状況分析,コメント行数やコメント率を計算する。重要な関数や処理ブロックのコメント有無を確認する。コメント内容と最新コード状態の一致を評価する。プログラム間のコメント品質を比較する,コメント行数・コメント率・コメント不足箇所一覧・プログラム別コメント率・平均コメント率,対象ソース解析結果・対象ソースコード,行数・パーセント・行番号,プログラム間のコメント充実度を比較評価する,コメント率目標値,グラフ（パイチャート・棒グラフ）・表形式（コメント状況詳細）
310,2.1.9,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,必須コメントチェック,ファイルヘッダーや関数説明など必須コメントの存在をチェックする。IDENTIFICATION DIVISION内の必須項目を確認する。変更履歴やライセンス情報の記載を確認する。全体の必須コメント充足状況を分析する,不足コメント箇所・コメント種類・欠落項目・プログラム別欠落件数,対象ソース解析結果・対象ソースコード,行番号・文字列・件数,プログラム間の必須コメント充足状況を評価する,コメント規約,表形式（不足コメント一覧）・グラフ（欠落統計）
311,2.1.10,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,コメント質的評価,コメント内容がコード理解に役立つか評価する。具体性や明確性・不要なコメントの有無をチェックする。コードの変更に伴うコメント更新状況を確認する。プログラム間のコメント品質を比較する,コメント評価スコア・改善必要コメント・良質/不適切コメント例・プログラム別平均スコア,対象ソース解析結果・対象ソースコード,数値・行番号・文字列,プログラム間のコメント品質を比較評価する,コメント品質評価基準,テキスト記述・表形式（コメント評価一覧）・グラフ（評価スコア比較）
312,2.1.11,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,標準化違反箇所分析,複数のソースコードでコーディング標準違反箇所を検出する。変数スコープ・例外処理の統一性・リソース解放忘れを解析する。言語仕様の非推奨機能使用や互換性問題を検出する。全体的な標準化遵守率を評価する,違反箇所数・違反内容・違反の重大度・修正推奨度・プログラム別違反件数・違反率,対象ソース解析結果・対象ソースコード,件数・文字列・重大度,プログラム間の標準化状況を比較評価する,コーディング標準,表形式（標準化違反一覧）・違反箇所ビューア・グラフ（違反統計）
313,2.2.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,デッドコード検出,到達不能なコードや使用されていないコードブロックを特定する。制御フロー解析で実行されないコードを検出する。条件が常に真または偽になる箇所を特定する。プログラム全体のデッドコード傾向を分析する,デッドコード箇所・デッドコードの総行数・デッドコードが存在する理由・プログラム別デッドコード行数,対象ソース解析結果・対象AST,行番号・行数・文字列,プログラム間のデッドコード状況を比較する,不要,表形式（デッドコード一覧）・ソースコードハイライト・グラフ（行数比較）
314,2.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,未使用定数検出,定義されているが使用されていない定数を検出する。定数の定義場所と使用箇所を比較し参照がないものを特定する。未使用定数の削減によるコード簡素化を評価する,未使用定数名・定義箇所・定数の値・推奨対応・プログラム別未使用定数数,対象ソース解析結果・対象AST,文字列・行番号・件数,プログラム間の未使用定数状況を比較する,コーディング規約,表形式（未使用定数一覧）・グラフ（未使用定数比較）
315,2.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,未使用変数検出,定義されているが使用されていない変数を検出する。変数のスコープ内での参照回数を解析し未使用のものを特定する。未使用変数の削減によるメモリ効率向上を評価する,未使用変数名・定義箇所・変数のデータ型・推奨対応・プログラム別未使用変数数,対象ソース解析結果・対象AST,文字列・行番号・件数,プログラム間の未使用変数状況を比較する,コーディング規約,表形式（未使用変数一覧）・グラフ（未使用変数比較）
316,2.2.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,未使用関数検出,定義されているが呼び出されていない関数を検出する。関数のエントリポイントからの到達性を解析し未使用関数を特定する。未使用関数の整理によるコードベース縮小効果を評価する,未使用関数名・定義箇所・関数の引数・戻り値・推奨対応・プログラム別未使用関数数,対象ソース解析結果・対象AST,文字列・行番号・件数,プログラム間の未使用関数状況を比較する,コーディング規約,表形式（未使用関数一覧）・グラフ（未使用関数比較）
317,2.2.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,重複コード検出,同一または類似のコードブロックを検出する。コードクローン検出ツールで一定の類似度を持つコードを特定する。重複コードの範囲・位置・類似度スコアを提供する。重複コードの共通化による保守性向上効果を評価する,重複コードの範囲・重複回数・類似度・重複箇所一覧・プログラム別重複コード行数,対象ソース解析結果・対象ソースコード,行番号・回数・パーセント・行数,プログラム間の重複コード状況を比較する,コード再利用性ガイドライン,表形式（重複コード一覧）・コード比較ビューア・グラフ（重複行数比較）
318,2.2.6,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,エラーハンドリング不備は品質・信頼性関連なので品質側,異常終了リスク箇所検出,エラーハンドリングが不十分な箇所や例外処理がない箇所を検出する。外部リソース操作後のエラーチェックを確認する。NULL参照や配列の境界外アクセスの可能性を解析する。システム全体の信頼性向上に向けたリスク評価を実施する,リスク箇所・リスク内容・リスクの重大度・発生可能性・プログラム別リスク箇所数,対象ソース解析結果・対象AST,行番号・文字列・重大度・件数,プログラム間のリスク状況を比較する,エラーハンドリングガイドライン,表形式（リスク箇所一覧）・優先度リスト・グラフ（リスク箇所比較）
319,2.2.7,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,GOTO文使用状況分析,複数のソースコードでGOTO文の使用箇所と頻度を解析する。GOTO文がプログラムの可読性や保守性に与える影響を評価する。GOTO文の代替手段を提示する。GOTO文の使用削減によるコード品質向上を検討する,GOTO文使用回数・使用箇所・ジャンプ先・影響範囲・プログラム別使用件数,対象ソース解析結果・対象AST,回数・行番号・文字列・件数,プログラム間のGOTO文使用状況を比較する,コーディング規約,表形式（GOTO文使用一覧）・制御フロー図・グラフ（使用件数比較）
320,2.2.8,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,PERFORM文ネスト深度分析,PERFORM文のネストレベルを解析し最大ネスト深度を特定する。深いネストがコードの理解や保守性に与える影響を評価する。ネストが深すぎる場合のリファクタリング案を提示する。プログラム全体のネスト深度傾向を分析する,最大ネスト深度・ネストが深い箇所・平均ネスト深度・ネスト深度分布・プログラム別深度統計,対象ソース解析結果・対象AST,レベル数・行番号・統計値,プログラム間のネスト深度状況を比較する,ネスト深度許容範囲,グラフ（ヒストグラム）・表形式（ネスト深度一覧）・比較グラフ
321,2.2.9,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,条件分岐複雑性分析,条件分岐の数やネスト深度を解析しサイクロマティック複雑度を計算する。複雑度が高い箇所を特定しコードの理解やテストの難易度を評価する。プログラム全体の複雑度傾向を分析する,サイクロマティック複雑度・条件分岐総数・複雑度高関数一覧・プログラム別平均複雑度,対象ソース解析結果・対象AST,数値・回数・文字列,プログラム間の複雑度状況を比較する,複雑度許容範囲,グラフ（棒グラフ・複雑度分布図）・表形式（複雑度一覧）
322,2.3.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,モジュール分割推奨箇所特定,大きすぎるモジュールや関数を特定し分割案を提示する。モジュールの責務が曖昧で複数機能を持つ場合を検出する。単一責任原則に基づきモジュールの再設計を提案する。プログラム間の共通問題点を分析する,対象モジュール名・分割推奨理由・推奨分割方法・新モジュール提案・プログラム別改善優先度,対象ソース解析結果・対象AST,文字列・提案内容,プログラム間のモジュール設計状況を比較する,モジュールサイズ基準,表形式（分割提案一覧）・モジュール関係図・グラフ（改善効果予測）
323,2.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,ロジック最適化候補特定,非効率なアルゴリズムや冗長な処理を検出し最適化を提案する。不要なループ・無駄なデータアクセス・非効率な条件分岐を特定する。最適なアルゴリズムやデータ構造の使用案を提示する。全体的なパフォーマンス向上策を提案する,対象箇所・最適化提案内容・予想性能向上効果・プログラム別性能改善効果,対象ソース解析結果・対象AST,行番号・文字列・予測値,プログラム間の処理効率を比較する,パフォーマンス基準・ベストプラクティス,表形式（最適化提案一覧）・性能比較データ・グラフ（向上効果予測）
324,2.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,パフォーマンス改善ポイント特定,処理時間が長くなる可能性のあるコード箇所を特定する。プロファイリングデータを用いてボトルネックを解析する。リソース消費量の多い箇所を特定する。システム全体のパフォーマンス最適化策を提案する,改善ポイント・改善提案内容・予想改善効果・プログラム別改善効果予測,対象ソース解析結果・対象AST,行番号・文字列・予測値,プログラム間のパフォーマンス状況を比較する,パフォーマンス要件,表形式（改善ポイント一覧）・グラフ（処理時間比較・効果比較）
325,2.3.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,保守性向上施策提案,コードの可読性や保守性を向上させる提案を行う。複雑な条件式の簡素化・コメントの充実・変数名の改善を提案する。テストカバレッジの向上やドキュメント整備を含める。全体的な保守性向上戦略を策定する,対象箇所・提案内容・保守性向上効果・プログラム別優先度,対象ソース解析結果・対象AST,行番号・文字列・効果予測,プログラム間の保守性状況を比較する,保守性ガイドライン,テキスト記述・表形式（提案一覧）・グラフ（向上効果予測）
326,2.3.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,共通化推奨処理特定,重複している処理を特定し共通モジュール化を提案する。共通処理の抽出によりコードの再利用性を高める方法を提示する。共通モジュールのインターフェース設計や影響範囲を分析する。全体的なコードベースの最適化と開発効率向上を目指す,重複処理箇所・共通化メリット・コード削減率・プログラム別共通化効果,対象ソース解析結果・対象AST,行番号範囲・文字列・パーセント,プログラム間の共通処理状況を比較する,コード再利用性ガイドライン,表形式（共通化提案一覧）・ビフォーアフター比較・グラフ（削減効果予測）
327,3.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,総行数分析,複数のソースコード全体の行数をカウントする。コメント行や空行も含めた総行数を取得する。ASTで論理的な構造を解析しプログラムの複雑さや規模を評価する。各プログラムの行数を集計し全体傾向を分析する,総行数・各プログラム行数・セクション行数内訳・プログラム間比較・平均最大最小行数,対象ソース解析結果・対象AST,行数,プログラム間の規模を比較評価する,不要,テキスト記述・グラフ（棒グラフ）・表形式（行数一覧）
328,3.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,実行行数分析,コメント行や空行を除いた実行コード行数をカウントする。ASTで実行可能なコード要素を抽出する。COPY文やマクロの展開結果も考慮する。各プログラムの実行行数を集計しコード密度を評価する,実行行数・総行数比率・各プログラム実行行数・比率・平均最大最小実行行数,対象ソース解析結果・対象AST,行数・パーセント,プログラム間の実効コード量を比較する,不要,テキスト記述・グラフ（パイチャート）・表形式（比較一覧）
329,3.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,コメント行数分析,コメント行数をカウントし総行数に対するコメント率を計算する。ASTからコメントノードを抽出し種類を分類する。コメント内容を解析しドキュメンテーション品質を評価する。各プログラムのコメント状況を評価する,コメント行数・コメント率・コメント種類別行数・プログラム別コメント状況,対象ソース解析結果・対象AST,行数・パーセント,プログラム間のコメント充実度を比較する,コメント率目標値,テキスト記述・グラフ（パイチャート・推移）・比較グラフ
330,3.2.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,サイクロマティック複雑度分析,複数プログラムの制御フローグラフを作成し複雑度を計算する。各プログラム・パラグラフ・セクションごとに複雑度を算出する。複雑度が高い箇所はバグ発生リスクが高まるため重点レビューを実施する。プログラム間で複雑度傾向を分析し改善領域を特定する,サイクロマティック複雑度・各プログラムの複雑度一覧・各パラグラフの複雑度一覧・平均最大最小複雑度・プログラム別複雑度ランキング,対象ソース解析結果・対象AST,数値・ランキング,プログラム間の複雑度を比較評価する,複雑度上限値（例：10以下）,テキスト記述・グラフ（分布図）・制御フロー図・比較グラフ
331,3.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,制御フロー複雑度分析,条件分岐やループのネスト深度を解析する。ASTでネスト構造を把握し深さを計測する。ネストが深すぎる箇所は可読性や保守性に問題がある可能性があり重点的に解析する。プログラム間でネスト深度傾向を分析する,最大ネスト深度・平均ネスト深度・深い箇所の位置・各プログラムのネスト深度統計,対象ソース解析結果・対象AST,レベル数・統計値,プログラム間のネスト状況を比較する,ネスト深度許容範囲,テキスト記述・グラフ（分布図）・ツリーマップ・比較グラフ
332,3.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,"Halstead, Maintainability Index",保守性指標分析,Halsteadメトリクスや保守性指数を計算する。演算子とオペランドの分析・プログラムのボリューム・難易度・労力を計算する。複雑度・行数・コメント率から保守性指数を算出する。プログラム間で保守性を比較し改善プログラムを特定する,保守性スコア・保守性評価・Halsteadメトリクス詳細・各プログラムの保守性スコア,対象ソース解析結果・対象AST,数値・評価結果,プログラム間の保守性を比較評価する,保守性スコア基準値,テキスト記述・グラフ（レーダーチャート）・推移グラフ・比較グラフ
333,3.3.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,テストカバレッジも品質関連,コードカバレッジ分析,単体テストや統合テスト結果を用いて実行カバレッジを計算する。ステートメント・ブランチ・パスカバレッジを計算する。未カバーのコード箇所を特定しテストケースの不足を明確化する。プログラム全体のテスト網羅状況を評価する,コードカバレッジ率・各カバレッジ指標詳細・未カバー箇所一覧・プログラム別カバレッジ率,対象ソース解析結果・テスト結果,パーセント・箇所・統計値,プログラム間のテストカバレッジを比較する,カバレッジ率目標値,グラフ（パイチャート）・カバレッジマップ・比較グラフ
334,3.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,,重複コード率分析,コードの類似性を解析し重複している割合を計算する。コードクローン検出ツールで類似度の高いコードブロックを特定する。重複コードの発生原因を分析し共通化やリファクタリング案を提示する。プログラム間の重複コード傾向を分析する,重複コード率・重複箇所数・重複位置情報・重複種類・各プログラムの重複コード率,対象ソース解析結果・対象ソースコード,パーセント・件数・位置,プログラム間の重複状況を比較する,重複コード率許容範囲,グラフ（棒グラフ）・マトリクス図・一覧表・比較グラフ
335,3.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,変更頻度は品質・保守性評価要素,変更頻度分析,バージョン管理システムの履歴を解析し各コードの変更回数を集計する。変更の種類を分類する。変更頻度の高い箇所はバグの温床である可能性があり重点的に検証する。プログラム間の変更頻度を比較し問題箇所を特定する,変更回数・変更多い箇所・変更理由分析・変更頻度ランキング・各プログラムの変更回数,対象ソース解析結果・バージョン管理履歴,回数・箇所・分析結果,プログラム間の変更傾向を比較する,変更頻度目安,グラフ（ヒートマップ）・タイムライン・一覧表・比較グラフ
336,4.1.1,ドキュメント,複数,セキュリティ・脆弱性関連,,SQLインジェクション検出,ユーザー入力が直接SQL文に組み込まれていないかをチェックする。パラメータ化クエリやプリペアドステートメントの使用状況を確認する。入力データのバリデーションやエスケープ処理が適切か解析する。プログラム全体でのSQL操作の安全性を評価する,脆弱箇所数・該当行番号・プログラム名・問題コードスニペット・脆弱性詳細説明・影響範囲,対象ソース解析結果・対象AST,件数・行番号・文字列,プログラム間のSQL操作の安全性を比較する,セキュアコーディング規約,表形式（脆弱性一覧）・深刻度別色分け表示・ハイライト表示・比較グラフ
337,4.1.2,ドキュメント,複数,セキュリティ・脆弱性関連,,バッファオーバーフロー検出,データの受け渡しでサイズチェックが行われているかを確認する。配列や文字列操作で境界チェックが適切に行われているか解析する。メモリ操作時の不正アクセスやデータ破損のリスクを検出する。プログラム全体のメモリ操作の安全性を評価する,脆弱箇所数・該当行番号・プログラム名・問題コードスニペット・脆弱性詳細・潜在的影響,対象ソース解析結果・対象AST,件数・行番号・文字列,プログラム間のメモリ操作の安全性を比較する,セキュリティガイドライン,表形式（脆弱性一覧）・深刻度別優先度設定・問題箇所表示・比較グラフ
338,4.1.3,ドキュメント,複数,セキュリティ・脆弱性関連,,ハードコード認証情報検出,パスワードや秘密鍵などがソースコード内にハードコードされていないか検出する。正規表現や機械学習でパターンに一致する情報を抽出する。コメントやデバッグコード内の機密情報も確認する。全体的なセキュリティリスクを評価する,認証情報数・該当行番号・プログラム名・検出情報種類・リスク評価・推奨対策,対象ソース解析結果・対象ソースコード,件数・行番号・文字列・評価結果,プログラム間の機密情報管理状況を比較する,セキュリティポリシー,表形式（検出結果一覧）・即時修正箇所強調・比較グラフ
339,4.1.4,ドキュメント,複数,セキュリティ・脆弱性関連,,安全でないファイル操作検出,ファイル操作時の適切なエラーチェックやアクセス制御を確認する。ファイルパスのバリデーションやサニタイズが適切か解析する。ファイルの権限設定や暗号化の有無をチェックする。全体的なファイル操作の安全性を評価する,リスク箇所数・該当行番号・プログラム名・問題コードスニペット・脆弱性詳細・影響範囲,対象ソース解析結果・対象AST,件数・行番号・文字列,プログラム間のファイル操作の安全性を比較する,セキュリティガイドライン,表形式（脆弱性一覧）・リスクレベル別分類・問題箇所表示・比較グラフ
340,4.1.5,ドキュメント,複数,セキュリティ・脆弱性関連,,コマンドインジェクション検出,外部コマンド呼び出しにユーザー入力が含まれていないかをチェックする。シェルメタ文字の適切なエスケープ処理を解析する。安全なコマンド実行方法を検証する。プログラム全体のコマンド実行の安全性を評価する,脆弱箇所数・該当行番号・プログラム名・問題コードスニペット・脆弱性詳細・攻撃シナリオ,対象ソース解析結果・対象AST,件数・行番号・文字列,プログラム間のコマンド実行の安全性を比較する,セキュリティガイドライン,表形式（脆弱性一覧）・深刻度別対応期限・比較グラフ
341,4.2.1,ドキュメント,複数,セキュリティ・脆弱性関連,,CVEデータベース連携分析,使用ライブラリやモジュールのCVE該当性を確認する。ライブラリのバージョン情報を取得しCVEデータベースと照合する。プラットフォーム固有の脆弱性も含めて解析する。プログラム全体の依存関係を解析し影響範囲を評価する,CVE番号・該当箇所・脆弱性概要・影響度・推奨対応策・プログラム別該当件数,対象ソース解析結果・CVEデータベース,文字列・件数・評価結果,プログラム間の脆弱性状況を比較する,最新CVEデータベース,表形式（CVE一覧）・詳細リンク・優先度ソート・比較グラフ
342,4.2.2,ドキュメント,複数,セキュリティ・脆弱性関連,,脆弱性スコアリング,検出された脆弱性のCVSSスコアを計算する。CVSS v3.1のベース・時間的・環境スコアを算出する。組織の環境要因や資産価値を考慮したスコアリングを実施する。プログラム間のリスクレベルを比較し優先対処脆弱性を特定する,CVSSスコア・深刻度・脆弱性詳細評価・総合リスク評価・プログラム別平均CVSSスコア,対象ソース解析結果・CVSSデータ,数値・評価結果・統計値,プログラム間の脆弱性リスクを比較する,CVSS評価基準,グラフ（分布図）・円グラフ・一覧表・比較グラフ
343,4.2.3,ドキュメント,複数,セキュリティ・脆弱性関連,,推奨対策提示,脆弱性への具体的な対策や修正案を提示する。セキュリティアドバイザリやベンダー情報を参照する。修正の優先度や影響範囲を考慮し対応計画を策定する。プログラム全体のセキュリティ改善計画を提案する,推奨対策内容・実施手順・注意点・必要リソース工数・プログラム別優先度,対象ソース解析結果・セキュリティ情報,文字列・工数・優先度,プログラム間の対策状況を比較する,セキュリティガイドライン,テキスト記述・表形式（対策一覧）・ガントチャート・対策計画表
344,5.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB操作は品質関連領域,SQL文種類頻度分析,埋め込みSQL文を解析しSELECT/INSERT/UPDATE/DELETEなどの種類と頻度を集計する。SQL文の複雑さを解析する。ASTでSQL文の構造を詳細に解析しパフォーマンスへの影響を評価する。各プログラムのSQL使用傾向を分析する,SQL文種類・使用回数・各SQL平均最大行数・複雑SQL数・プログラム別使用頻度・全体割合,対象ソース解析結果・対象AST,文字列・回数・行数・件数,プログラム間のSQL利用状況を比較する,データベースアクセスガイドライン,表形式（SQL種類別集計）・グラフ（割合）・ヒートマップ・比較グラフ
345,5.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB関連の品質分析,カーソル宣言分析,カーソルの宣言と使用箇所を解析する。カーソルのタイプや属性を特定する。カーソルのオープン・フェッチ・クローズ処理の適切性を検証する。プログラム間のカーソル使用パターンを比較する,カーソル名・使用箇所・タイプと属性・カーソル処理の有無・プログラム別使用件数,対象ソース解析結果・対象AST,文字列・行番号・件数,プログラム間のカーソル利用状況を比較する,カーソル使用基準,表形式（カーソル一覧）・フローチャート・比較グラフ
346,5.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB関連品質評価,テーブル参照環境分析,参照データベースやテーブルの一覧を取得する。各テーブルへの操作種類と頻度を解析する。テーブル間の関係性も考慮する。プログラム間の共通参照テーブルを特定し依存関係を分析する,データベース名・テーブル名・アクセス種別・操作頻度・テーブル別アクセス割合・プログラム別アクセス状況,対象ソース解析結果・対象AST,文字列・回数・パーセント,プログラム間のテーブル参照状況を比較する,データベースアクセスガイドライン,表形式（テーブル一覧）・グラフ（頻度）・関係図・比較グラフ
347,5.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,SQL複雑度は品質関連,結合複雑度分析,SQL文のテーブル結合数や種類を解析する。結合条件の適切性を検証する。ネストされた結合やサブクエリの使用状況を解析する。プログラム全体の結合パターンを分析しパフォーマンス改善を提案する,結合数・結合種類・結合対象テーブル・複雑結合数・プログラム別結合複雑度,対象ソース解析結果・対象AST,件数・文字列・評価結果,プログラム間の結合複雑度を比較する,結合複雑度パフォーマンス基準,グラフ（分布図）・構造図・比較グラフ
348,5.2.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB特性評価は品質関連,DB2検出分析,DB2関連のSQL文やAPIの使用を検出する。特定のDB2拡張機能の使用状況も解析する。DB2の使用がプログラム間で一貫しているか確認し標準化を検討する,DB2使用有無・使用箇所・DB2固有機能一覧・バージョン依存機能・プログラム別使用状況,対象ソース解析結果・対象AST,有無・行番号・文字列,プログラム間のDB2利用状況を比較する,データベース統一方針,テキスト記述・表形式（機能一覧）・比較グラフ
349,5.2.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ファイル/DB関連は品質関連,VSAM検出分析,VSAMファイルのアクセス命令を検出する。ファイル組織とアクセスモードを解析する。プログラム間のVSAM使用パターンを比較し効率的なストレージ利用を検討する,VSAM使用有無・使用箇所・ファイル名・処理状況・プログラム別使用状況,対象ソース解析結果・対象AST,有無・行番号・文字列,プログラム間のVSAM利用状況を比較する,ストレージ標準化方針,テキスト記述・表形式（アクセス一覧）・比較グラフ
350,5.2.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB特化解析は品質関連,IMS DB検出分析,IMS DB関連のコマンド使用を検出する。データベース階層構造のアクセスパターンを解析する。DL/I呼び出しの使用状況を詳細に解析する。プログラム間のIMS DB使用状況を比較する,IMS DB使用有無・使用箇所・セグメント名・固有機能状況・プログラム別使用状況,対象ソース解析結果・対象AST,有無・行番号・文字列,プログラム間のIMS DB利用状況を比較する,データベース統一方針,テキスト記述・表形式（アクセス一覧）・比較グラフ
351,5.2.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB特化解析は品質関連,Oracle検出分析,Oracle固有のSQL構文や機能の使用を検出する。PL/SQLブロックの有無やOracle特有のデータ型・関数の使用状況を解析する。プログラム間のOracle使用状況を比較する,Oracle使用有無・使用箇所・固有機能一覧・バージョン依存機能・プログラム別使用状況,対象ソース解析結果・対象AST,有無・行番号・文字列,プログラム間のOracle利用状況を比較する,データベース統一方針,テキスト記述・表形式（機能一覧）・比較グラフ
352,5.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DBアクセスパターンは品質・性能関連,アクセスパターン分析,データベースへのアクセス方法や頻度を解析する。アクセス頻度の高いテーブルやレコードを特定する。トランザクションごとのアクセスパターンも解析する。プログラム間のアクセスパターンを比較する,アクセスパターン・アクセス回数・高頻度テーブル一覧・パターン別割合・プログラム別比較,対象ソース解析結果・対象AST,文字列・回数・パーセント,プログラム間のアクセス傾向を比較する,パフォーマンス基準,グラフ（分布図）・一覧表・比較グラフ
353,5.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB取引制御は品質関連,トランザクション境界分析,トランザクションの開始・終了箇所を検出する。コミット・ロールバックのタイミングを解析しトランザクション粒度を評価する。エラーハンドリングや再試行処理を確認する。プログラム間の一貫性を評価する,トランザクション数・範囲・平均処理時間・操作種類回数・プログラム別数と粒度,対象ソース解析結果・対象AST,件数・行番号・時間・回数,プログラム間のトランザクション管理を比較する,トランザクション管理ガイドライン,テキスト記述・表形式（一覧）・フロー図・比較グラフ
354,5.2.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,DB接続管理は品質関連,コネクション管理分析,データベース接続の確立・切断方法とその適切性を解析する。コネクションプーリングの有無や再利用状況を確認する。接続エラー処理やタイムアウト設定を解析する。プログラム間の管理手法を比較する,コネクション数・管理方法・平均生存時間・エラー処理有無・プログラム別管理状況,対象ソース解析結果・対象AST,件数・文字列・時間・有無,プログラム間のコネクション管理を比較する,コネクション管理ベストプラクティス,テキスト記述・表形式（一覧）・フロー図・比較グラフ
355,5.3.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,外部連携・プラットフォーム依存は品質関連,プロトコル検出分析,使用している通信プロトコルを検出する。TCP/IP・HTTP・MQ・FTPなどのプロトコル使用状況を解析する。同期・非同期通信の区別やセキュリティプロトコルの使用有無を確認する。プログラム間のプロトコル使用の一貫性を評価する,プロトコル名・使用箇所・プロトコルバージョン・通信方向性・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・方向性,プログラム間のプロトコル利用状況を比較する,通信プロトコル標準,表形式（プロトコル一覧）・通信フロー図・比較グラフ
356,5.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,データ交換フォーマット分析は品質・標準化関連,データフォーマット分析,データ交換時のフォーマットを解析する。データスキーマやメッセージ構造の詳細を解析する。エンコーディング方式も確認する。プログラム間のデータフォーマット使用の一貫性を評価する,フォーマット種類・使用箇所・バージョン仕様・データサイズ転送頻度・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・サイズ・頻度,プログラム間のフォーマット利用状況を比較する,データフォーマット標準,表形式（フォーマット一覧）・互換性マトリクス・比較グラフ
357,5.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,外部システム連携は品質関連,システム依存関係分析,外部システムやサービスとの依存関係を特定する。依存システムのバージョンやインターフェース仕様を解析する。依存関係の強さや代替手段の有無を評価する。共通の依存関係を整理しシステム全体への影響を評価する,外部システム名・依存関係内容・依存方向性・依存度評価・プログラム別依存関係一覧,対象ソース解析結果・対象AST,文字列・方向性・評価結果,プログラム間のシステム依存状況を比較する,システム間連携ガイドライン,グラフ（依存関係図）・表形式（一覧）・比較グラフ
358,5.4.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,JCLは外部連携、運用品質関連,JCL参照解析,使用しているJCLを解析しジョブの設定やパラメータを特定する。JCL内のステップやユーティリティの使用状況を解析する。環境変数やパラメータカードの使用を確認する。プログラム間のJCL使用の一貫性と共通化可能性を検討する,JCL名・使用パラメータ・実行条件・リソース割当・プログラム別使用状況,対象ソース解析結果・JCLソース,文字列・パラメータ・条件,プログラム間のJCL利用状況を比較する,JCL標準,表形式（JCL一覧）・ジョブフロー図・比較グラフ
359,5.4.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,バッチ運用管理は品質関連,ジョブ依存関係分析,ジョブの実行順序や依存関係を解析する。ジョブネットワークを構築し並列実行や待ち合わせ条件を解析する。エラー時のリカバリ手順や再実行条件を確認する。全体的なジョブの依存関係を可視化する,ジョブ名・依存関係・実行時間・クリティカルパス・依存関係マトリクス,対象ソース解析結果・JCLソース,文字列・時間・パス,プログラム間のジョブ依存状況を比較する,ジョブ管理ガイドライン,グラフ（フローチャート）・ガントチャート・ヒートマップ
360,5.4.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ファイル/DB品質関連,データセット使用状況分析,使用データセットを解析する。データセットの属性を特定する。データセットのライフサイクルを解析する。データセットの共有状況やアクセス競合リスクを評価する,データセット名・アクセスモード・属性詳細・共有状況・プログラム別使用状況,対象ソース解析結果・JCLソース,文字列・モード・属性,プログラム間のデータセット利用状況を比較する,データセット命名規則・アクセス制御ガイドライン,表形式（使用一覧）・データフロー図・比較グラフ
361,5.4.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ジョブ運用・品質関連,条件コード分析,条件コードの設定やチェック箇所を解析する。条件コードによる分岐や再実行ロジックを解析する。エラーコードの体系や統一性を評価する。プログラム間での条件コード使用の一貫性を確認する,条件コード値・使用箇所・エラーメッセージ・設定基準・プログラム別使用状況,対象ソース解析結果・対象AST,数値・行番号・文字列,プログラム間の条件コード使用状況を比較する,エラーハンドリングガイドライン,表形式（使用一覧）・フロー図・比較グラフ
362,6.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,UI・可視化関連は品質側,画面制御方式分析,画面制御の方式を特定する。画面制御関連の命令やAPIを解析し具体的な制御方式を判別する。各画面制御方式の特性や制約を評価する。プログラム間での画面制御方式の一貫性を評価する,画面制御方式・使用箇所・使用頻度割合・複数方式内訳・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・パーセント,プログラム間の画面制御方式を比較する,画面制御標準,テキスト記述・表形式（一覧）・グラフ（割合）・比較グラフ
363,6.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,UI関連品質評価,画面セクション構造分析,SCREEN SECTIONを解析し画面項目やレイアウトを特定する。画面項目の属性を抽出する。画面間の遷移や関連性を解析する。プログラム間での画面設計の一貫性を評価する,画面項目名・レイアウト情報・データ型制限値・画面遷移図・プログラム別画面構造,対象ソース解析結果・対象AST,文字列・属性・フロー,プログラム間の画面構造を比較する,画面設計ガイドライン,表形式（項目一覧）・グラフ（レイアウト図）・遷移図・比較図
364,6.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,UI・I/O品質分析,端末I/O分析,ACCEPT/DISPLAY等の端末入出力命令の使用状況を解析する。入出力データの内容やフォーマットを特定する。エラーメッセージ表示方法を確認する。プログラム間での端末I/O使用パターンを比較する,入出力命令使用箇所・使用回数・データ項目内容・エラー処理内容・プログラム別使用状況,対象ソース解析結果・対象AST,行番号・回数・文字列,プログラム間の端末I/O利用状況を比較する,端末I/O使用基準,表形式（命令一覧）・フローチャート・比較グラフ
365,6.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,UIデザイン統一性は品質関連,画面マップ分析,画面項目と配置を解析し画面マップを生成する。位置情報や属性でレイアウトを構築する。ユーザー操作シーケンスを解析する。プログラム間での画面デザインの統一性を評価する,画面マップ・画面項目詳細情報・画面遷移フロー・プログラム別画面マップ,対象ソース解析結果・対象AST,図・属性・フロー,プログラム間の画面デザインを比較する,画面デザイン標準,グラフ（マップ図）・プロトタイプ・比較図
366,6.1.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,UI・インタラクション品質,対話パターン分析,ユーザーとの対話パターンを解析する。イベントハンドリングやフィードバック機構を特定する。入力データの検証や制約条件を解析する。プログラム間での対話パターンを比較する,対話パターン種類・使用箇所・詳細フロー・操作シーケンス・プログラム別比較,対象ソース解析結果・対象AST,文字列・行番号・フロー,プログラム間の対話パターンを比較する,UI/UXガイドライン,グラフ（フローチャート）・ストーリーマップ・比較図
367,6.2.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,バッチ処理品質・運用関連,バッチ構造分析,バッチ処理の全体的な流れと構成を解析する。ジョブのステップ構成や依存関係を解析する。スケジューリング情報や実行頻度を考慮する。バッチ処理間の共通点や相違点を特定する,処理ステップ・実行順序・入出力データ・処理時間・依存関係マトリクス,対象ソース解析結果・対象AST,文字列・順序・時間・マトリクス,プログラム間のバッチ構造を比較する,バッチ処理標準,グラフ（フローチャート）・ガントチャート・統合フロー図
368,6.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ファイル操作品質,ファイル処理分析,ファイルの読み書き操作やアクセスモードを解析する。ファイルの組織形態やレコード長を特定する。エラーハンドリングやロック制御を確認する。プログラム間でのファイル使用の一貫性を評価する,ファイル名・アクセスモード・ファイル組織・使用箇所・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・モード・行番号・頻度,プログラム間のファイル処理を比較する,ファイル操作ガイドライン,表形式（使用一覧）・データフロー図・比較グラフ
369,6.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,処理品質・性能関連,ソート/マージ分析,SORT文やMERGE文の使用状況を解析する。ソートキーやマージ条件・ファイルサイズを特定する。ソートアルゴリズムの選択やメモリ使用量を評価する。プログラム間のソート/マージ処理を比較する,ソート/マージ回数・使用箇所・ソートキー項目・推定処理時間・プログラム別処理状況,対象ソース解析結果・対象AST,回数・行番号・項目・時間,プログラム間のソート/マージ処理を比較する,パフォーマンス基準,表形式（操作一覧）・グラフ（処理時間）・比較グラフ
370,6.2.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,バッチ再始動性・信頼性は品質関連,チェックポイント分析,チェックポイントやリスタート処理の有無を解析する。チェックポイントの設置基準や頻度を評価する。異常終了時のリカバリ手順やデータ整合性確保方法を確認する。バッチ処理間のチェックポイント設定の一貫性を評価する,チェックポイント数・設定箇所・処理内容・リスタート可能ステップ・プログラム別設定状況,対象ソース解析結果・対象AST,件数・行番号・処理内容,プログラム間のチェックポイント設定を比較する,バッチ処理信頼性ガイドライン,テキスト記述・フローチャート・比較グラフ
371,6.3.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラ・COBOL間インターフェースは品質・保守性関連,データ受け渡し方法分析,アセンブラとのインターフェース部分を解析しデータ受け渡し方法を特定する。レジスタ・メモリ領域・スタックでのデータ交換詳細を解析する。エンディアンやアライメントの考慮点を確認する。プログラム間のデータ受け渡し方法の統一性を評価する,データ受け渡し方法・該当箇所・データ型サイズ・インターフェース整合性・プログラム別比較,対象ソース解析結果・対象AST,文字列・行番号・サイズ・評価結果,プログラム間のデータ受け渡しを比較する,インターフェース仕様,テキスト記述・表形式（一覧）・フローチャート・比較図
372,6.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,モジュール間のコール規約統一性は品質関連,呼び出し規約分析,プログラム間の呼び出し規約を解析する。関数間の引数受け渡し方法や戻り値の扱いを解析する。エラーハンドリングや例外処理方法を確認する。プログラム間の呼び出し規約の一貫性を評価する,呼び出し規約種類・該当箇所・引数順序型・呼び出し整合性・プログラム別比較,対象ソース解析結果・対象AST,文字列・行番号・型情報・評価結果,プログラム間の呼び出し規約を比較する,システム呼び出し規約,テキスト記述・コールグラフ・表形式（一覧）・比較図
373,6.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラデータ型解析は品質関連,データ型分析,アセンブラで使用されているデータ型を解析する。データ型のサイズや符号付き/符号なしの違いを特定する。COBOL側のデータ型との互換性を確認する。プログラム間のデータ型使用の統一性を評価する,データ型種類・使用箇所・各データ型サイズ・使用目的・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・行番号・バイト数・目的,プログラム間のデータ型使用を比較する,データ型統一基準,表形式（データ型一覧）・マッピング表・比較グラフ
374,6.3.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラ構造解析は品質関連,データ構造分析,アセンブラで定義されているデータ構造を解析する。構造体や共用体のフィールド情報・オフセットを特定する。パディングやアライメントの影響を考慮する。プログラム間のデータ構造の再利用性を評価する,データ構造名・構成要素・全体サイズ・COBOL対応表・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・フィールド情報・サイズ・対応表,プログラム間のデータ構造利用を比較する,データ構造設計基準,表形式（構造詳細）・メモリレイアウト図・比較図
375,6.3.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラの制御フロー品質分析,プログラムの流れ分析,アセンブラコードのフローを解析し制御フローグラフを作成する。分岐命令やループ構造を特定する。例外処理や割り込みハンドリングを確認する。プログラム間のロジックの共通点を特定する,フローチャート・処理ブロック説明・クリティカルセクション・プログラム別制御フロー,対象ソース解析結果・対象AST,図・説明・セクション,プログラム間の制御フローを比較する,不要,グラフ（フローチャート）・シーケンス図・比較図
376,6.3.6,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラのエラーハンドリング品質,エラー処理分析,アセンブラコード内のエラーハンドリング部分を解析する。エラーコードの設定や例外発生時の挙動を特定する。ログ出力や通知機構を確認する。プログラム間のエラー処理方法の統一性を評価する,エラー処理方法・該当箇所・エラーコード種類・エラー発生条件・プログラム別処理状況,対象ソース解析結果・対象AST,文字列・行番号・コード・条件,プログラム間のエラー処理を比較する,エラーハンドリングガイドライン,テキスト記述・表形式（一覧）・比較グラフ
377,6.3.7,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラ最適化は品質・性能関連,最適化検討,アセンブラコードのパフォーマンスを解析し最適化余地を検討する。ボトルネックとなる命令やループを特定する。命令レベルの最適化を評価する。プログラム間での最適化ポイントを比較する,最適化可能箇所・提案内容・性能向上率・リスクコスト評価,対象ソース解析結果・対象AST,行番号・提案・パーセント・評価,プログラム間の最適化可能性を比較する,パフォーマンス基準,テキスト記述・表形式（提案一覧）・比較グラフ
378,6.3.8,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラ可読性・品質評価,コードの理解難易度分析,アセンブラコードの複雑さを評価し理解難易度を判定する。サイクロマティック複雑度やネスト深さを計算する。コメントの有無や可読性も評価する。プログラム間の理解難易度を比較する,理解難易度スコア・難解箇所・複雑度詳細・改善提案・プログラム別比較,対象ソース解析結果・対象AST,数値・行番号・詳細・提案,プログラム間の理解難易度を比較する,理解難易度評価基準,グラフ（レーダーチャート）・ヒートマップ・比較グラフ
379,6.3.9,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,アセンブラコメント品質,コメントドキュメンテーション分析,アセンブラコード内のコメントの量と質を解析する。コメントとコードの一致性や有用性を評価する。不足ドキュメント箇所を特定する。プログラム間のコメント品質を比較する,コメント行数・コメント率・コメント例・コメント種類・プログラム別評価,対象ソース解析結果・対象AST,行数・パーセント・例・種類・評価,プログラム間のコメント充実度を比較する,コメントガイドライン,テキスト記述・表形式（評価一覧）・比較グラフ
380,6.3.10,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,移植性・品質関連,プラットフォーム依存性分析,プラットフォーム固有の命令や機能使用箇所を特定する。ハードウェア依存の最適化や特殊なI/O操作を検出する。移植性への影響を評価する。プログラム間のプラットフォーム依存性を比較する,依存箇所・依存内容・代替手段・影響範囲・プログラム別評価,対象ソース解析結果・対象AST,行番号・内容・手段・範囲・評価,プログラム間のプラットフォーム依存を比較する,移植性ガイドライン,表形式（依存一覧）・評価表・比較グラフ
381,6.3.11,ドキュメント,複数,セキュリティ・脆弱性関連,アセンブラコード内のセキュリティ問題,脆弱性検出,アセンブラコード内のセキュリティ脆弱性を検出する。バッファオーバーフロー・メモリリーク・未初期化変数を特定する。セキュリティベストプラクティスからの逸脱を解析する。プログラム間の脆弱性傾向を分析する,脆弱箇所・脆弱性種類・詳細説明・対策・プログラム別件数,対象ソース解析結果・対象AST,行番号・種類・説明・対策・件数,プログラム間の脆弱性状況を比較する,セキュリティ基準,表形式（脆弱性一覧）・分類表・比較グラフ
382,6.3.12,ドキュメント,複数,セキュリティ・脆弱性関連,,セキュアコーディング順守分析,セキュアコーディングガイドライン準拠をチェックする。安全なメモリ管理・入力検証・エラーハンドリングを評価する。既知の脆弱性パターンを確認する。プログラム間の順守状況を比較する,違反箇所数・違反内容・リスク評価・修正提案・プログラム別違反件数,対象ソース解析結果・対象AST,件数・内容・評価・提案・統計,プログラム間の順守状況を比較する,セキュアコーディングガイドライン,表形式（違反一覧）・優先度リスト・比較グラフ
383,7.1.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,メーカー方言は標準化・品質関連,HITACHI方言分析,HITACHI固有のCOBOL拡張機能や方言使用箇所を検出する。特定の命令や機能を解析する。標準COBOLとの互換性を評価する。プログラム間での方言使用傾向を分析する,方言使用箇所数・該当プログラム数・機能命令一覧・移行影響度評価・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・一覧・評価結果,プログラム間の方言使用状況を比較する,標準COBOL準拠度基準,表形式（方言一覧）・影響度分類・比較グラフ
384,7.1.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,メーカー方言は標準化・品質関連,FUJITSU方言分析,FUJITSU固有のCOBOL拡張機能や方言使用箇所を検出する。プリプロセッサ指示や組み込み関数を解析する。他のCOBOLコンパイラとの互換性を評価する。プログラム間での方言使用状況を比較する,方言使用箇所数・該当プログラム数・方言機能一覧・代替手段・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・一覧・手段,プログラム間の方言使用状況を比較する,標準COBOL準拠度基準,表形式（方言一覧）・影響度分類・比較グラフ
385,7.1.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,メーカー方言は標準化・品質関連,IBM方言分析,IBM固有のCOBOL拡張機能や方言使用箇所を検出する。特有のオプションや命令・データ型を解析する。標準化への影響を評価する。プログラム間での方言使用状況を比較する,方言使用箇所数・該当プログラム数・IBM固有機能詳細・移行コスト・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・一覧・コスト,プログラム間の方言使用状況を比較する,標準COBOL準拠度基準,表形式・影響度分類・比較グラフ
386,7.1.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,メーカー方言は標準化・品質関連,NEC方言分析,NEC固有のCOBOL拡張機能や方言使用箇所を検出する。独自のデータ型や制御構文を解析する。標準COBOLとの互換性を評価する。プログラム間での方言使用状況を比較する,方言使用箇所数・該当プログラム数・方言機能一覧・代替実装・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・一覧・実装案,プログラム間の方言使用状況を比較する,標準COBOL準拠度基準,表形式・影響度分類・比較グラフ
387,7.1.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,メーカー方言は標準化・品質関連,UNISYS方言分析,UNISYS固有のCOBOL拡張機能や方言使用箇所を検出する。システム関数やファイル制御機能を解析する。他システムへの移行影響を評価する。プログラム間での方言使用状況を比較する,方言使用箇所数・該当プログラム数・使用機能詳細・移行リスク・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・一覧・リスク評価,プログラム間の方言使用状況を比較する,標準COBOL準拠度基準,表形式・影響度分類・比較グラフ
388,7.2.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,文字コード関連の品質・標準化,EBCDIC分析,EBCDIC文字コード使用箇所を検出する。データ変換処理や文字コード依存ロジックを解析する。外部システムとのデータ連携部分を確認する。プログラム間での使用状況を比較する,EBCDIC使用箇所数・該当プログラム数・変換処理有無・影響範囲・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・箇所・処理内容,プログラム間の文字コード使用状況を比較する,文字コード統一方針,表形式（使用一覧）・影響度マトリクス・比較グラフ
389,7.2.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,文字コード関連の品質・標準化,JEF分析,JEF文字コード使用箇所を検出する。文字列リテラルやデータ項目のエンコーディングを解析する。JEFコード特有の文字使用状況を特定する。外部システムとのデータ交換部分を確認する,JEF使用箇所数・該当プログラム数・特有文字使用箇所・変換処理詳細・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・箇所・処理内容,プログラム間の文字コード使用状況を比較する,文字コード統一方針,表形式（使用一覧）・影響度マトリクス・比較グラフ
390,7.2.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,文字コード関連の品質・標準化,KEIS分析,KEIS文字コード使用箇所を検出する。データ定義部や入出力処理でのKEISコード使用を解析する。KEIS特有の制御コードや拡張文字使用を特定する。文字コード変換の実装や外部インターフェースとの整合性を確認する,KEIS使用箇所数・該当プログラム数・特有文字制御コード使用箇所・変換処理詳細・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・箇所・処理内容,プログラム間の文字コード使用状況を比較する,文字コード統一方針,表形式（使用一覧）・ヒートマップ・比較グラフ
391,7.2.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,文字コード関連の品質・標準化,ASCII分析,ASCII文字コード使用箇所を検出する。データ項目や文字列処理でASCIIコードを前提とする部分を解析する。ASCII文字と非ASCII文字の混在や処理方法を特定する。プログラム間での使用状況を比較する,ASCII使用箇所数・該当プログラム数・前提処理箇所・変換エンコーディング指定・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・箇所・処理内容,プログラム間の文字コード使用状況を比較する,文字コード統一方針,表形式（使用一覧）・グラフ（使用割合）・比較グラフ
392,7.2.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,文字コード関連の品質・標準化,Shift-JIS分析,Shift-JIS文字コード使用箇所を検出する。データ項目や入出力処理でのShift-JIS使用を解析する。機種依存文字やサロゲートペアの使用状況を特定する。他の文字コードとの変換処理や互換性を確認する,Shift-JIS使用箇所数・該当プログラム数・特有文字使用箇所・変換処理有無・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・箇所・処理内容,プログラム間の文字コード使用状況を比較する,文字コード統一方針,表形式（使用一覧）・グラフ（使用割合）・比較グラフ
393,7.3.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,標準化違反や非標準構文使用は品質関連,特殊構文分析,標準COBOLに含まれない特殊な構文を検出する。各メーカー固有の拡張構文やオプションを解析する。プログラム全体をパースし非標準的な文法要素を特定する。プログラム間での特殊構文使用状況を比較する,特殊構文種類・使用箇所・使用目的効果・標準構文置換可能性・プログラム別使用頻度,対象ソース解析結果・対象AST,文字列・行番号・評価結果,プログラム間の特殊構文使用状況を比較する,標準COBOL準拠度,表形式（使用一覧）・影響度分類・提案リスト・比較グラフ
394,7.3.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,非標準機能使用は品質関連,特殊コマンド使用状況分析,メーカー固有の特殊コマンド使用箇所を検出する。プリプロセッサ指示やコンパイラディレクティブを解析する。特殊コマンドの機能や効果を調査する。プログラム間での使用状況を比較する,特殊コマンド名・使用箇所数・使用目的詳細・代替手段・プログラム別使用頻度,対象ソース解析結果・対象AST,文字列・件数・説明,プログラム間の特殊コマンド使用状況を比較する,標準COBOL統一方針,表形式（使用一覧）・影響度評価・比較グラフ
395,7.3.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,非標準関数使用は品質関連,特殊関数使用状況分析,メーカー固有の特殊関数使用箇所を検出する。独自追加の組み込み関数やライブラリ関数を解析する。関数の引数や戻り値の型・機能を調査する。プログラム間での使用状況を比較する,特殊関数名・使用箇所数・使用目的説明・代替可能性・プログラム別使用頻度,対象ソース解析結果・対象AST,文字列・件数・説明,プログラム間の特殊関数使用状況を比較する,標準COBOL統一方針,表形式（使用一覧）・代替提案・比較グラフ
396,7.3.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,キーワード傾向分析は品質関連,キーワード使用頻度統計,キーワードの使用頻度を集計し特殊なキーワードの使用状況を分析する。標準キーワードと非標準キーワードを分類する。使用頻度の高いキーワードを特定する。プログラム間での使用パターンを比較する,キーワード別使用回数・標準非標準割合・頻出ランキング・プログラム別使用頻度,対象ソース解析結果・対象AST,件数・パーセント・ランク,プログラム間のキーワード使用状況を比較する,標準キーワード統一方針,グラフ（使用頻度）・表形式（一覧）・比較グラフ
397,7.3.5,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,ファイル使用パターン品質分析,ファイルシステム種別分布分析,使用されているファイルシステムを解析する。各ファイルシステムの特徴や用途を調査する。プログラム内でのファイル操作方法を解析する。プログラム間でのファイルシステム使用状況を比較する,ファイルシステム種別・使用プログラム数・使用割合・アクセス頻度データ量・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・件数・パーセント・頻度,プログラム間のファイルシステム使用状況を比較する,ファイルシステム統一方針,グラフ（使用割合）・表形式（一覧）・比較グラフ
398,7.3.6,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,画面関連は品質,画面制御方式統計,メーカー固有の画面制御方式使用箇所を検出する。各画面制御方式の特徴や制約を調査する。プログラム内での使用頻度や重要度を解析する。プログラム間での使用状況を比較する,画面制御方式名・使用プログラム数・使用割合・標準比較・プログラム別使用状況,対象ソース解析結果・対象AST,文字列・件数・パーセント・比較結果,プログラム間の画面制御方式使用状況を比較する,画面制御方式移行ガイドライン,表形式（使用一覧）・グラフ（割合）・移行計画
399,8.1,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,可視化は品質関連,Mermaidフローチャート生成,複数プログラムの制御フローを解析しMermaid記法でフローチャートを生成する。各パラグラフやセクションの関係性を解析する。エラーハンドリングや例外処理の流れを組み込む。プログラム間の共通点や差異を分析する,フローチャート・処理ブロック説明・複雑度強調表示・プログラム別フローチャート,対象ソース解析結果・対象AST,Mermaid記法・説明・強調表示,プログラム間の制御フローを比較する,不要,グラフ（フローチャート）・エクスポート・比較図
400,8.2,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,可視化は品質関連,Mermaidシーケンス図生成,モジュール間の呼び出し関係を解析しシーケンス図を生成する。外部システムやデータベースとの相互作用を含める。タイミングや同期/非同期の情報を盛り込む。プログラム間の通信パターンを分析する,シーケンス図・メソッド名データフロー・シナリオ別図・プログラム別シーケンス図,対象ソース解析結果・対象AST,Mermaid記法・フロー・シナリオ,プログラム間の相互作用を比較する,不要,グラフ（シーケンス図）・エクスポート・比較図
401,8.3,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,データ流れ可視化は品質関連,データフロー図生成,データの流れを解析しデータフロー図を作成する。データの生成・変換・消費プロセスを解析する。データストアや外部データソースとの関係を含める。プログラム間のデータ共有を可視化する,データフロー図・データ項目フロー・ライフサイクル・プログラム間フロー,対象ソース解析結果・対象AST,図・フロー・ライフサイクル,プログラム間のデータフローを比較する,不要,グラフ（データフロー図）・レイヤー図・比較図
402,8.4,ドキュメント,複数,コード品質・保守性・最適化・規約順守関連,システム全体可視化は品質関連,システム構成図生成,システム全体の構成を解析し図示する。ハードウェア・ネットワーク・ソフトウェアコンポーネントの関係を特定する。依存関係やデータフローを組み込む。システム全体の相互作用を可視化する,システム構成図・コンポーネント役割・インターフェース・物理論理構成・プログラム別詳細,対象ソース解析結果・対象AST,図・役割・構成,プログラム間のシステム構成を比較する,システムアーキテクチャ標準,グラフ（構成図）・階層別詳細図・比較図
